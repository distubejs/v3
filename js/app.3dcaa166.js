(function(){var e={2342:function(e,t,s){"use strict";s.r(t)},8182:function(e){function t(e,t){let s=null;return function(...i){clearTimeout(s),s=setTimeout((()=>{e.apply(this,i)}),t)}}function s(e,s){s.value!==s.oldValue&&(e.oninput=t((()=>{e.dispatchEvent(new Event("change"))}),parseInt(s.value)||500))}s.debounce=t,e.exports=s},5020:function(e){e.exports={string:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",number:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",boolean:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",symbol:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",void:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",Object:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",Function:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",function:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",Array:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",Set:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",Map:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",Date:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",RegExp:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",Promise:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",Error:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",EventEmitter:"https://nodejs.org/dist/latest/docs/api/events.html#events_class_eventemitter",Timeout:"https://nodejs.org/dist/latest/docs/api/timers.html#timers_class_timeout",Buffer:"https://nodejs.org/dist/latest/docs/api/buffer.html#buffer_class_buffer",ReadableStream:"https://nodejs.org/dist/latest/docs/api/stream.html#stream_class_stream_readable",ChildProcess:"https://nodejs.org/dist/latest/docs/api/child_process.html#child_process_class_childprocess",Worker:"https://nodejs.org/api/worker_threads.html#worker_threads_class_worker",MessagePort:"https://nodejs.org/api/worker_threads.html#worker_threads_class_messageport",ytdl:"https://github.com/fent/node-ytdl-core/blob/master/typings/index.d.ts",Collection:"https://discord.js.org/#/docs/collection/main/class/Collection",Client:"https://discord.js.org/#/docs/main/main/class/Client",Message:"https://discord.js.org/#/docs/main/main/class/Message",GuildMember:"https://discord.js.org/#/docs/main/main/class/GuildMember",User:"https://discord.js.org/#/docs/main/main/class/User",VoiceConnection:"https://discord.js.org/#/docs/main/main/class/VoiceConnection",StreamDispatcher:"https://discord.js.org/#/docs/main/main/class/StreamDispatcher",TextChannel:"https://discord.js.org/#/docs/main/main/class/TextChannel",VoiceChannel:"https://discord.js.org/#/docs/main/main/class/VoiceChannel",Snowflake:"https://discord.js.org/#/docs/main/main/typedef/Snowflake",StageChannel:"https://discord.js.org/#/docs/main/main/class/StageChannel",VoiceState:"https://discord.js.org/#/docs/main/main/class/VoiceState",Interaction:"https://discord.js.org/#/docs/main/main/class/Interaction",BaseGuildVoiceChannel:"https://discord.js.org/#/docs/main/main/class/BaseGuildVoiceChannel",BaseGuildTextChannel:"https://discord.js.org/#/docs/main/main/class/BaseGuildTextChannel",Guild:"https://discord.js.org/#/docs/main/main/class/Guild"}},6943:function(e,t,s){"use strict";s.d(t,{TU:function(){return Ha}});var i=s(9963),n=s(6252);const a={id:"app"},r=(0,n.Uk)("An updated version of the site is available.");function o(e,t,s,o,l,c){const p=(0,n.up)("app-navbar"),u=(0,n.up)("router-view"),d=(0,n.up)("app-footer"),m=(0,n.up)("snackbar");return(0,n.wg)(),(0,n.iD)("div",a,[(0,n.Wm)(p,{repository:l.repository},null,8,["repository"]),(0,n.Wm)(u,{darkMode:l.darkMode,konami:l.konami,onToggleDarkMode:c.toggleDarkMode,onSetRepository:c.setRepository},null,8,["darkMode","konami","onToggleDarkMode","onSetRepository"]),(0,n.Wm)(d,{darkMode:l.darkMode,onToggleDarkMode:c.toggleDarkMode},null,8,["darkMode","onToggleDarkMode"]),(0,n.Wm)(i.uT,{name:"fade-slide-vertical"},{default:(0,n.w5)((()=>[l.updateExists?((0,n.wg)(),(0,n.j4)(m,{key:0,action:"Reload",onClick:c.refresh},{default:(0,n.w5)((()=>[r])),_:1},8,["onClick"])):(0,n.kq)("",!0)])),_:1})])}const l=(0,n.Uk)("DisTube"),c=(0,n.Uk)("Documentation"),p=["href"],u=(0,n._)("a",{href:"https://discord.gg/feaDd9h"},"Discord",-1),d=(0,n._)("a",{href:"https://github.com/skick1234/DisTube/wiki"},"Guide",-1);function m(e,t,s,i,a,r){const o=(0,n.up)("router-link"),m=(0,n.up)("container");return(0,n.wg)(),(0,n.iD)("header",null,[(0,n.Wm)(m,null,{default:(0,n.w5)((()=>[(0,n.Wm)(o,{to:"/"},{default:(0,n.w5)((()=>[l])),_:1}),(0,n._)("nav",null,[(0,n.Wm)(o,{to:"/docs"},{default:(0,n.w5)((()=>[c])),_:1}),(0,n._)("a",{href:`https://github.com/${s.repository}`},"GitHub",8,p),u,d])])),_:1})])}var h={name:"navbar",props:["repository"]},g=s(3744);const y=(0,g.Z)(h,[["render",m]]);var f=y,b=s(3577);const T=(0,n.Uk)("DisTube"),v=(0,n._)("p",null,"A powerful Discord.js module to manage your music bot",-1),D=(0,n._)("p",null,[(0,n.Uk)("Made with "),(0,n._)("a",{href:"https://github.com/discordjs/website",target:"_blank"},"discord.js-website")],-1),k={id:"site-meta"},w=(0,n._)("div",{id:"site-meta-label"},"Ï€",-1),S=(0,n._)("br",null,null,-1);function M(e,t,s,i,a,r){const o=(0,n.up)("router-link"),l=(0,n.up)("stats"),c=(0,n.up)("container");return(0,n.wg)(),(0,n.iD)("footer",null,[(0,n.Wm)(c,null,{default:(0,n.w5)((()=>[(0,n._)("strong",null,[(0,n.Wm)(o,{to:"/"},{default:(0,n.w5)((()=>[T])),_:1})]),v,(0,n.Wm)(l),(0,n._)("a",{href:"",id:"dark-mode-link",onClick:t[0]||(t[0]=(...e)=>r.toggleDarkMode&&r.toggleDarkMode(...e))},[(0,n._)("em",{class:(0,b.C_)(["fa",s.darkMode?"fa-sun-o":"fa-moon-o"])},null,2),(0,n.Uk)(" Turn "+(0,b.zw)(s.darkMode?"on":"off")+" the lights ",1)]),D])),_:1}),(0,n._)("div",k,[w,(0,n.Uk)(" commit: "+(0,b.zw)(a.hash),1),S,(0,n.Uk)(" built at: "+(0,b.zw)(a.builtAt.toUTCString()),1)])])}const P={class:"stats"};function q(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("ul",P,[(0,n._)("li",null,(0,b.zw)(e.downloads)+" downloads",1),(0,n._)("li",null,(0,b.zw)(e.stars)+" stars",1),(0,n._)("li",null,(0,b.zw)(e.contributors)+" contributors",1)])}const C=e=>e.json(),_=()=>{},R={downloads:`${5e4.toLocaleString()}+`,stars:`${50..toLocaleString()}+`,contributors:"1",fetching:!1};var x={name:"stats",data(){return R},beforeMount(){this.fetch()},methods:{async fetch(){if(this.fetching)return;this.fetching=!0;const[e,t,s]=await Promise.all([fetch("https://api.npmjs.org/downloads/range/2013-08-21:2100-08-21/distube").then(C,_),fetch("https://api.github.com/repos/skick1234/DisTube").then(C,_),fetch("https://api.github.com/repos/skick1234/DisTube/stats/contributors").then(C,_)]);if(e){this.downloads=0;for(const t of e.downloads)this.downloads+=t.downloads;this.downloads=this.downloads.toLocaleString()}t&&(this.stars=t.stargazers_count.toLocaleString()),s&&(this.contributors=s.length.toLocaleString())}}};const j=(0,g.Z)(x,[["render",q]]);var $=j,E={name:"djs-footer",props:["darkMode"],components:{Stats:$},data(){return{hash:"fb5ffc15f8a0031df27e5d345c78d83a4f9dc102",builtAt:new Date(1699884181150)}},methods:{toggleDarkMode(e){this.$emit("toggleDarkMode"),e.preventDefault()}}};const O=(0,g.Z)(E,[["render",M]]);var B=O;const Q={class:"snackbar"},U={class:"snackbar-text"},W={key:0,class:"snackbar-action"};function A(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("div",Q,[(0,n._)("div",U,[(0,n.WI)(e.$slots,"default")]),s.action?((0,n.wg)(),(0,n.iD)("div",W,[(0,n._)("button",{onClick:t[0]||(t[0]=(...e)=>r.click&&r.click(...e))},(0,b.zw)(s.action),1)])):(0,n.kq)("",!0)])}var G={name:"snackbar",props:["action"],methods:{click(){this.$emit("click")}}};const L=(0,g.Z)(G,[["render",A]]);var V=L,F=s(1249),I=s.n(F);s(1703);const H=e=>{if(!e.ok)throw new Error("Failed to fetch docs data file from GitHub");return e.json()};class z{constructor(e){this.id=e.id,this.name=e.name,this.global=e.global,this.repo=e.repo,this.branch=e.branch,this.defaultTag=e.defaultTag||"master",this.defaultClass=e.defaultClass,this.defaultFile=e.defaultFile||{category:"general",id:"welcome"},this.source=e.source||`https://github.com/${this.repo}/blob/`,this.branchFilter=e.branchFilter||(e=>"master"!==e),this.tagFilter=e.tagFilter||(()=>!0),this.tags=null,this.recentTag=null}fetchTags(){return this.tags?this.tags:Promise.all([fetch(`https://api.github.com/repos/${this.repo}/branches`).then(H),fetch(`https://api.github.com/repos/${this.repo}/tags`).then(H)]).catch((e=>{if(localStorage[`source-${this.id}`]){console.error(e);const t=JSON.parse(localStorage[`source-${this.id}`]);return[t.branches,t.tags]}throw e})).then((e=>{const[t,s]=e;this.tags=[this.defaultTag],localStorage[`source-${this.id}`]=JSON.stringify({branches:t,tags:s});for(const n of t)n.name!==this.defaultTag&&this.branchFilter(n.name)&&this.tags.push(n.name);const i={};for(const n of s)if(I().valid(n.name)){const e=`${I().major(n.name)}.${I().minor(n.name)}`,t=I().patch(n.name);if(t<i[e])continue;i[e]=t}for(const n of s)if(n.name!==this.defaultTag&&this.tagFilter(n.name)){if(I().valid(n.name)){const e=`${I().major(n.name)}.${I().minor(n.name)}`,t=I().patch(n.name);if(t<i[e])continue}this.tags.push(n.name)}return this.tags}))}fetchDocs(e){return"testSource"===e?new Promise((e=>e(s(3282)))):fetch(`https://raw.githubusercontent.com/${this.repo}/${this.branch}/${e}.json`).then(H)}}const N=new Set(["docs","js-docs","v2"]);var Y=new z({id:"DisTube",name:"DisTube",repo:"skick1234/DisTube",global:"DisTube",branch:"docs",defaultTag:"main",branchFilter:e=>!N.has(e),tagFilter:e=>I().gte(e,"4.0.0"),defaultFile:{category:"general",id:"welcome"}}),K=s(8269),Z=s.n(K);let J=null;var X={name:"app",components:{AppNavbar:f,AppFooter:B,Snackbar:V},data(){const e=localStorage.getItem("dark-mode");return{darkMode:"false"!==e&&null!==e,repository:Y.repo,updateExists:!1,refreshing:!1,konami:!1}},methods:{toggleDarkMode(){this.darkMode=!this.darkMode,localStorage.setItem("dark-mode",this.darkMode),this.darkMode?this.$el.classList.add("dark"):this.$el.classList.remove("dark")},setRepository(e){this.repository=e},swUpdated(e){this.registration=e.detail,this.updateExists=!0},refresh(){this.updateExists&&(this.updateExists=!1,this.registration&&this.registration.waiting&&this.registration.waiting.postMessage({type:"SKIP_WAITING"}))},poop(){const e=document.createElement("div");e.className="poop",e.innerHTML="ðŸ’©";const t=4e3*Math.random()+1e3;e.style.transition=`top ${t}ms linear, left ${t}ms linear`,e.style.animation=`spin ${t/3e3}s infinite linear`;const s=Math.floor(4*Math.random())+1,i={top:`${2===s||4===s?Math.random()*window.innerHeight:1===s?-200:window.innerHeight+200}px`,left:`${1===s||3===s?Math.random()*window.innerWidth:4===s?-200:window.innerWidth+200}px`},n={top:`${2===s||4===s?Math.random()*window.innerHeight:1===s?window.innerHeight+200:-200}px`,left:`${1===s||3===s?Math.random()*window.innerWidth:4===s?window.innerWidth+200:-200}px`};Object.assign(e.style,i),window.setTimeout((()=>{Object.assign(e.style,n)}),100),document.body.appendChild(e),window.setTimeout((()=>{document.body.removeChild(e)}),t+100),window.setTimeout((()=>this.poop()),1e4*Math.random()+1e3)}},created(){document.addEventListener("swUpdated",this.swUpdated,{once:!0}),navigator.serviceWorker.addEventListener("controllerchange",(()=>{this.refreshing||(this.refreshing=!0,window.location.reload())}))},mounted(){this.darkMode&&this.$el.classList.add("dark"),J||(J=new(Z())((()=>{this.konami=!0,this.poop(),J.disable()})))}};const ee=(0,g.Z)(X,[["render",o]]);var te=ee,se=s(7441),ie=s(2201);const ne={id:"home"},ae=(0,n._)("code",null,"npm install distube",-1),re=(0,n._)("br",null,null,-1),oe={id:"info"},le=(0,n.uE)('<div class="info-item"><h2>About</h2><p> DisTube is a <a href="https://discord.js.org/">discord.js</a> module to simplify your music commands and play songs with audio filters on Discord without any API key. </p><p><ul><li>Support YouTube and audio link</li><li>Audio filters included (bassboost, nightcore, vaporwave,...)</li><li>Easy to use and customize</li><li>Autoplay related songs</li><li>Plugin system to support more sites</li></ul></p></div>',1),ce={class:"info-item"},pe=(0,n._)("h2",null,"Statistics",-1),ue={class:"center"},de=(0,n._)("p",{class:"center"},"...and growing!",-1),me={class:"full-info-item"},he=(0,n.Uk)("Get started"),ge=(0,n._)("a",{href:"https://discord.gg/feaDd9h",class:"big-ass-btn discord"},"Discord",-1);function ye(e,t,s,i,a,r){const o=(0,n.up)("logo"),l=(0,n.up)("slide"),c=(0,n.up)("stats"),p=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("div",ne,[(0,n.Wm)(l,{id:"jumbotron"},{default:(0,n.w5)((()=>[(0,n.Wm)(o,{light:!0,konami:s.konami,id:"logo"},null,8,["konami"]),ae,re])),_:1}),(0,n._)("section",oe,[le,(0,n._)("div",ce,[pe,(0,n._)("p",ue,[(0,n.Wm)(c)]),de]),(0,n._)("div",me,[(0,n.Wm)(p,{to:"/docs",class:"big-ass-btn"},{default:(0,n.w5)((()=>[he])),_:1}),ge])])])}const fe={src:"https://cdn.jsdelivr.net/gh/skick1234/MaBu-CDN@4.9.0/DisTube/img/banner.png"};function be(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("img",fe)}var Te={name:"logo",props:["light","konami"]};const ve=(0,g.Z)(Te,[["render",be]]);var De=ve,ke={name:"home",props:["konami"],components:{Logo:De,Stats:$},mounted(){this.$emit("setRepository",Y.repo)}};const we=(0,g.Z)(ke,[["render",ye]]);var Se=we;const Me={id:"docs"};function Pe(e,t,s,i,a,r){const o=(0,n.up)("docs-navbar"),l=(0,n.up)("router-view");return(0,n.wg)(),(0,n.iD)("div",Me,[(0,n.Wm)(o,{sources:a.sources,source:a.source},null,8,["sources","source"]),(0,n.Wm)(l,{source:a.source,tag:a.tag,darkMode:s.darkMode,onToggleDarkMode:r.toggleDarkMode,onSetRepository:r.setRepository},null,8,["source","tag","darkMode","onToggleDarkMode","onSetRepository"])])}var qe=new z({id:"JS-DisTube",name:"DisTube V2",repo:"skick1234/DisTube",global:"DisTube",branch:"js-docs",defaultTag:"v2",branchFilter:e=>"v2"===e,tagFilter:()=>!1,defaultClass:"DisTube"});const Ce={id:"docs-navbar"},_e=(0,n.Uk)(" View docs for "),Re=["value"],xe=["value"];function je(e,t,s,a,r,o){const l=(0,n.up)("loading"),c=(0,n.up)("container"),p=(0,n.Q2)("debounce");return(0,n.wg)(),(0,n.iD)("div",Ce,[(0,n.Wm)(c,null,{default:(0,n.w5)((()=>[_e,(0,n.wy)((0,n._)("select",{"onUpdate:modelValue":t[0]||(t[0]=e=>r.sourceChoice=e)},[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.sources,(e=>((0,n.wg)(),(0,n.iD)("option",{value:e.id,key:e.id},(0,b.zw)(e.name),9,Re)))),128))],512),[[i.bM,r.sourceChoice]]),(0,n.Wm)(i.uT,{name:"fade",mode:"out-in",onEnter:o.updateTagChoice},{default:(0,n.w5)((()=>[r.tags?(0,n.wy)(((0,n.wg)(),(0,n.iD)("select",{"onUpdate:modelValue":t[1]||(t[1]=e=>r.tagChoice=e),key:s.source.id},[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.tags,(e=>((0,n.wg)(),(0,n.iD)("option",{value:e,key:e},(0,b.zw)(e),9,xe)))),128))])),[[i.bM,r.tagChoice]]):((0,n.wg)(),(0,n.j4)(l,{key:1}))])),_:1},8,["onEnter"]),(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":t[2]||(t[2]=e=>r.search=e),type:"search",placeholder:"Search",onKeypress:t[3]||(t[3]=(0,i.D2)(((...e)=>o.goToSearch&&o.goToSearch(...e)),["enter"]))},null,544),[[i.nr,r.search,void 0,{lazy:!0,trim:!0}],[p,200]])])),_:1})])}var $e=s(8182),Ee=s.n($e);function Oe(e){if(window.hljs)window.hljs.highlightBlock(e);else{let t=0;const s=setInterval((()=>{window.hljs?(window.hljs.highlightBlock(e),clearInterval(s)):(t++,t>=50&&clearInterval(s))}),100)}}function Be(e,t,s,i,n){return new URL(`${t}/${s}${i?`/${i}`:""}${n?`#L${n}`:""}`,e)}function Qe(e,t){const s=e.match(/\{@link\s+(.+?)(?:\s|\|+(.+?))?\s*\}/i);s&&(e=s[1]);let i=s?s[2]:null;const n=e.split(/(\.|#)/);return t.links[n[0]]?{text:i||e,link:"object"===typeof t.links[n[0]]?{name:t.links[n[0]].name,params:t.links[n[0]].params,query:{scrollTo:n[1]?`${"."===n[1]?"s-":""}${n[2]}`:void 0}}:t.links[n[0]]}:e.match(/^https?:\/\//i)?{text:i||e,link:e}:{text:i||e}}function Ue(e,t,s,i){if(!e)return null;const n=/\{@link\s+(.+?)(?:\s+(.+?))?\s*\}/gi;let a,r="",o=0;while(a=n.exec(e)){r+=e.slice(o,a.index);const n=Qe(a[0],t);if(n.link){let e;"object"===typeof n.link?(n.link.params||(n.link.params={}),n.link.params.source=i.params.source,n.link.params.tag=i.params.tag,e=s.resolve(n.link).href):e=n.link,r+=`[${n.text}](${e})`}else r+=n.text;o=a.index+a[0].length}return r?(r+=e.slice(o),r):e}function We(e){return`${"static"===e.scope?"s-":""}${e.name}`}function Ae(e){try{return"string"===typeof e?e:e.join("-")}catch{return console.log(e),e}}const Ge={switching:!1};var Le={name:"docs-navbar",props:["sources","source"],directives:{debounce:Ee()},data(){return{sourceChoice:this.source.id,tagChoice:null,tags:null,search:this.$route.query.q}},methods:{loadTags(){if(this.tags=this.source.tags,!this.tags){const e=this.source;this.source.fetchTags().then((t=>{this.source.id===e.id&&(this.tags=t)}))}},updateTagChoice(){this.tags&&(this.tagChoice=this.$route.params.tag||this.source.recentTag||this.source.defaultTag)},goToSearch(){"docs-search"!==this.$route.name&&this.$router.push({name:"docs-search",query:{q:this.search}})}},watch:{sourceChoice(e){this.$route.params.source!==e&&this.$router.push({name:"docs-source",params:{source:e}})},tagChoice(e){e&&this.$route.params.tag!==e&&(Ge.switching=!0,this.$router.push({name:this.$route.name,params:{...this.$route.params,tag:e},query:this.$route.query}))},source(e){this.sourceChoice=e.id,this.tagChoice=null,this.loadTags()},search(e){this.$route.query.q?this.$router.replace({name:"docs-search",query:{q:e}}):this.$router.push({name:"docs-search",query:{q:e}})},$route(e){this.tagChoice&&e.params.tag&&this.tagChoice!==e.params.tag&&(this.tagChoice=e.params.tag)}},created(){this.loadTags()},mounted(){this.updateTagChoice()}};const Ve=(0,g.Z)(Le,[["render",je]]);var Fe=Ve,Ie={name:"documentation",props:["darkMode"],components:{DocsNavbar:Fe},data(){return{sources:{[Y.id]:Y,[qe.id]:qe},source:Y,tag:Y.defaultTag}},methods:{setSource(e){this.source=this.sources[e]},setTag(e){this.tag=e,this.source.recentTag=e},handleRoute(e){let t="docs-file";if(!e.params.source||!this.sources[e.params.source]){const e={source:Y.id,tag:Y.defaultTag};return Y.defaultClass?(t="docs-class",e.class=Y.defaultClass):(e.category=Y.defaultFile.category,e.file=Y.defaultFile.id),void this.$router.replace({name:t,params:e})}if(this.setSource(e.params.source),!e.params.tag){const e={source:this.source.id,tag:this.source.recentTag||this.source.defaultTag};return this.source.defaultClass?(t="docs-class",e.class=this.source.defaultClass):(e.category=this.source.defaultFile.category,e.file=this.source.defaultFile.id),void this.$router.replace({name:t,params:e})}if(this.setTag(e.params.tag),!e.params.file&&!e.params.class&&!e.params.typedef&&"docs-search"!==e.name){const e={source:this.source.id,tag:this.tag};this.source.defaultClass?(t="docs-class",e.class=this.source.defaultClass):(e.category=this.source.defaultFile.category,e.file=this.source.defaultFile.id),this.$router.replace({name:t,params:e})}},toggleDarkMode(){this.$emit("toggleDarkMode")},setRepository(e){this.$emit("setRepository",e)}},watch:{$route(e){this.handleRoute(e)}},created(){this.handleRoute(this.$route)}};const He=(0,g.Z)(Ie,[["render",Pe]]);var ze=He;function Ne(e,t,s,i,a,r){const o=(0,n.up)("unknown-page"),l=(0,n.up)("slide");return(0,n.wg)(),(0,n.j4)(l,{id:"unknown-route"},{default:(0,n.w5)((()=>[(0,n.Wm)(o,{type:"route",darkMode:s.darkMode},null,8,["darkMode"])])),_:1})}var Ye={name:"unknown-route",props:["darkMode"]};const Ke=(0,g.Z)(Ye,[["render",Ne]]);var Ze=Ke;const Je={id:"docs-body"},Xe={key:1,id:"docs-error"},et=(0,n.Uk)(" Couldn't load the documentation data. ");function tt(e,t,s,a,r,o){const l=(0,n.up)("loading"),c=(0,n.up)("slide"),p=(0,n.up)("router-view");return(0,n.wg)(),(0,n.iD)("div",Je,[(0,n.Wm)(p,null,{default:(0,n.w5)((({Component:e})=>[(0,n.Wm)(i.uT,{name:"fade-resize",mode:"out-in"},{default:(0,n.w5)((()=>[r.docs?((0,n.wg)(),(0,n.j4)((0,n.LL)(e),{key:0,docs:r.docs,darkMode:s.darkMode,onToggleDarkMode:o.toggleDarkMode,onSetRepository:o.setRepository},null,40,["docs","darkMode","onToggleDarkMode","onSetRepository"])):((0,n.wg)(),(0,n.j4)(c,{key:1},{default:(0,n.w5)((()=>[r.error?((0,n.wg)(),(0,n.iD)("p",Xe,[et,(0,n._)("pre",null,(0,b.zw)(r.error.toString()),1)])):((0,n.wg)(),(0,n.j4)(l,{key:0}))])),_:1}))])),_:2},1024)])),_:1})])}var st=s(5020),it=s.n(st),nt={name:"docs-loader",props:["source","tag","darkMode"],data(){return{docs:null,error:null,loadingTag:null,routeHook:null}},methods:{loadDocs(){if(this.loadingTag===this.tag)return;this.docs=null,this.error=null;const e=this.source,t=this.tag;this.loadingTag=this.tag,this.setRepository(this.source.repo),this.source.fetchDocs(this.tag).then((s=>{if(this.source===e&&this.tag===t){console.log("Loading",e,t),s.classes.sort(((e,t)=>e.name.localeCompare(t.name))),s.typedefs.sort(((e,t)=>e.name.localeCompare(t.name)));for(const e of s.classes)e.props&&e.props.sort(((e,t)=>e.name.localeCompare(t.name))),e.methods&&e.methods.sort(((e,t)=>e.name.localeCompare(t.name))),e.events&&e.events.sort(((e,t)=>e.name.localeCompare(t.name)));s.links=it(),s.externals=s.externals||[],s.classes=s.classes||[],s.typedefs=s.typedefs||[];for(const e of s.externals)s.links[e.name]=e.see[0].replace(/\{@link\s+(.+?)\s*\}/i,"$1");for(const e of s.classes)s.links[e.name]={name:"docs-class",params:{class:e.name}};for(const e of s.typedefs)s.links[e.name]={name:"docs-typedef",params:{typedef:e.name}};if("commando"===this.source.id&&(s.links.Message={name:"docs-class",params:{source:"main",tag:"master",class:"Message"}}),s.global=this.source.global,s.source=this.source.source,s.tag=this.tag,this.docs=s,this.loadingTag=null,this.updatePageTitle(this.$route),console.log("Finished loading",e,t),Ge.switching){const e=this.$route;Ge.switching=!1,"docs-class"===e.name?s.classes.some((t=>t.name===e.params.class))||this.goHome():"docs-typedef"===e.name?s.typedefs.some((t=>t.name===e.params.typedef))||this.goHome():"docs-file"===e.name&&(s.custom[e.params.category]&&s.custom[e.params.category].files[e.params.file]||this.goHome())}}})).catch((s=>{console.error("Error while loading",e,t,s),this.error=s,this.loadingTag=null}))},scroll(e){if(this.$route.query.scrollTo&&this.docs){const t=()=>{let e=document.getElementById(`doc-for-${this.$route.query.scrollTo}`);e||(e=document.getElementById(`doc-for-e-${this.$route.query.scrollTo}`)),e||(e=document.getElementById(this.$route.query.scrollTo)),e&&(e.setAttribute("data-scrolled",!0),setTimeout((()=>e.setAttribute("data-scrolled",!1)),1e3),setTimeout((()=>e.removeAttribute("data-scrolled")),2e3),e.scrollIntoView(),window.scrollBy(0,-50))},s=e&&(this.$route.name!==e.name||this.$route.params.class!==e.params.class||this.$route.params.typedef!==e.params.typedef||this.$route.params.file!==e.params.file);s?setTimeout(t,400):t()}},updatePageTitle(e){const t=e.matched.find((e=>"docs-tag"===e.name));if(!t)return void(document.title="DisTube");if(!this.docs)return;let s;if(e.params.file){const t=this.docs.custom?.[e.params.category];s=t?.files?.[e.params.file]?t.files[e.params.file].name:"Unknown file"}else{const{class:t,typedef:i}=e.params;if(s=t||i||"Search","Search"===s){const t=e.query.q;t&&(s=`${s}: ${t}`)}else if(t){const t=e.query.scrollTo;t&&(s=`${s}${t.startsWith("s-")?`.${t.slice(2)}`:`#${t.startsWith("e-")?t.slice(2):t}`}`)}}document.title=`${s} | DisTube`},goHome(){console.log("Redirecting to default file due to the current page not existing in the newly-loaded tag's docs.");let e="docs-file";const t={source:this.source.id,tag:this.tag};this.source.defaultClass?(t.class=this.source.defaultClass,e="docs-class"):(t.category=this.source.defaultFile.category,t.file=this.source.defaultFile.id),this.$router.replace({name:e,params:t})},toggleDarkMode(){this.$emit("toggleDarkMode")},setRepository(e){this.$emit("setRepository",e)}},watch:{source(){this.loadDocs()},tag(){this.loadDocs()},docs(e,t){t||setTimeout(this.scroll,700)},$route(e,t){this.scroll(t)}},beforeCreate(){this.routerHook=this.$router.afterEach((e=>{this.updatePageTitle(e)}))},created(){this.loadDocs()},mounted(){this.$nextTick(this.scroll)},beforeDestroy(){this.routerHook(),this.routerHook=null}};const at=(0,g.Z)(nt,[["render",tt]]);var rt=at;const ot={id:"docs-viewer"},lt={id:"docs-meta"},ct=(0,n._)("br",null,null,-1),pt=(0,n._)("em",{class:"fa fa-arrow-up"},null,-1),ut=[pt];function dt(e,t,s,a,r,o){const l=(0,n.up)("sidebar"),c=(0,n.up)("router-view"),p=(0,n.up)("container");return(0,n.wg)(),(0,n.iD)("div",ot,[(0,n.Wm)(p,null,{default:(0,n.w5)((()=>[(0,n.Wm)(l,{docs:s.docs,onShowPrivate:o.setShowPrivate,darkMode:s.darkMode,onToggleDarkMode:o.toggleDarkMode},null,8,["docs","onShowPrivate","darkMode","onToggleDarkMode"]),(0,n.Wm)(c,null,{default:(0,n.w5)((({Component:e})=>[(0,n.Wm)(i.uT,{name:"fade-slide",mode:"out-in"},{default:(0,n.w5)((()=>[((0,n.wg)(),(0,n.j4)((0,n.LL)(e),{docs:s.docs,key:o.key,showPrivate:r.showPrivate,darkMode:s.darkMode},null,8,["docs","showPrivate","darkMode"]))])),_:2},1024)])),_:1})])),_:1}),(0,n._)("div",lt,[(0,n._)("p",null,[(0,n.Uk)(" Documentation built at "+(0,b.zw)(new Date(s.docs.meta.date).toUTCString())+".",1),ct,(0,n.Uk)(" Generator: v"+(0,b.zw)(s.docs.meta.generator)+" Â  Format: "+(0,b.zw)(s.docs.meta.format),1)])]),(0,n._)("div",{id:"scroll-top",title:"Scroll to top",onClick:t[0]||(t[0]=(...e)=>o.scrollTop&&o.scrollTop(...e))},ut)])}const mt={id:"docs-sidebar"},ht=(0,n._)("em",{class:"fa fa-bars"},null,-1),gt=[ht],yt=(0,n._)("em",{class:"fa fa-arrow-left","aria-hidden":"true"},null,-1),ft=[yt],bt=["title"],Tt=["title"],vt={key:0},Dt=(0,n.Uk)(" Classes "),kt={key:1},wt=(0,n.Uk)(" Typedefs ");function St(e,t,s,a,r,o){const l=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("div",mt,[(0,n._)("div",{id:"open-btn",onClick:t[0]||(t[0]=(...e)=>o.toggle&&o.toggle(...e))},gt),(0,n._)("div",{id:"docs-sidebar-content",class:(0,b.C_)(r.visible?"open":"closed")},[(0,n._)("div",{id:"close-btn",onClick:t[1]||(t[1]=(...e)=>o.toggle&&o.toggle(...e))},ft),(0,n._)("em",{id:"docs-visibility",class:(0,b.C_)(["fa toggle",r.showPrivate?"fa-eye":"fa-eye-slash"]),title:o.togglePrivateLabel,onClick:t[2]||(t[2]=(...e)=>o.togglePrivate&&o.togglePrivate(...e))},null,10,bt),(0,n._)("em",{id:"docs-brightness",class:(0,b.C_)(["fa toggle",s.darkMode?"fa-moon-o":"fa-sun-o"]),title:o.toggleDarkModeLabel,onClick:t[3]||(t[3]=(...e)=>o.toggleDarkMode&&o.toggleDarkMode(...e))},null,10,Tt),(0,n._)("ul",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.docs.custom,((e,t)=>((0,n.wg)(),(0,n.iD)("li",{key:t},[(0,n.Uk)((0,b.zw)(e.name)+" ",1),(0,n._)("ul",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(e.files,((e,s)=>((0,n.wg)(),(0,n.iD)("li",{key:s},[(0,n.Wm)(l,{to:{name:"docs-file",params:{category:t,file:s}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name),1)])),_:2},1032,["to"])])))),128))])])))),128)),o.visibleClasses.length>0?((0,n.wg)(),(0,n.iD)("li",vt,[Dt,(0,n.Wm)(i.W3,{name:"animated-list",tag:"ul"},{default:(0,n.w5)((()=>[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(o.visibleClasses,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.name,class:"animated-list-item"},[(0,n.Wm)(l,{exact:"",to:{name:"docs-class",params:{class:e.name}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name),1)])),_:2},1032,["to"])])))),128))])),_:1})])):(0,n.kq)("",!0),o.visibleTypedefs.length>0?((0,n.wg)(),(0,n.iD)("li",kt,[wt,(0,n._)("ul",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(o.visibleTypedefs,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.name},[(0,n.Wm)(l,{exact:"",to:{name:"docs-typedef",params:{typedef:e.name}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name),1)])),_:2},1032,["to"])])))),128))])])):(0,n.kq)("",!0)])],2)])}var Mt={name:"docs-sidebar",props:["docs","darkMode"],data(){return{visible:!1,showPrivate:!1}},computed:{visibleClasses(){return this.showPrivate?this.docs.classes:this.docs.classes.filter((e=>"private"!==e.access))},visibleTypedefs(){return this.showPrivate?this.docs.typedefs:this.docs.typedefs.filter((e=>"private"!==e.access))},togglePrivateLabel(){return`Private items are ${this.showPrivate?"shown":"hidden"}. Click to toggle.`},toggleDarkModeLabel(){return`The lights are ${this.darkMode?"off":"on"}. Click to toggle.`}},methods:{toggle(){this.visible=!this.visible},togglePrivate(){this.showPrivate=!this.showPrivate},toggleDarkMode(){this.$emit("toggleDarkMode")}},watch:{showPrivate(e){this.$emit("showPrivate",e)},$route(e){this.visible&&(this.visible=!1),!e.query.scrollTo&&(window.pageYOffset||document.documentElement.scrollTop)>300&&window.scrollTo(0,90)}}};const Pt=(0,g.Z)(Mt,[["render",St]]);var qt=Pt,Ct={name:"docs-viewer",props:["docs","darkMode"],components:{Sidebar:qt},data(){return{showPrivate:!1}},computed:{key(){const e=this.$route.params;return e.file?`${e.category}/${e.file}`:e.search?"search":e.class||e.typedef}},methods:{setShowPrivate(e){this.showPrivate=e},scrollTop(){window.scrollTo(0,0)},toggleDarkMode(){this.$emit("toggleDarkMode")}},mounted(){this.$nextTick((()=>{const e=document.getElementById("scroll-top");let t,s;const i=()=>{(window.pageYOffset||document.documentElement.scrollTop)>300&&(clearTimeout(t),clearTimeout(s),e.style.display="block",s=setTimeout((()=>{e.style.opacity="1"}),20),window.removeEventListener("scroll",i),window.addEventListener("scroll",n))},n=()=>{(window.pageYOffset||document.documentElement.scrollTop)<300&&(clearTimeout(t),clearTimeout(s),e.style.opacity="0",t=setTimeout((()=>{e.style.display="none"}),1e3),window.removeEventListener("scroll",n),window.addEventListener("scroll",i))};window.addEventListener("scroll",i)}))}};const _t=(0,g.Z)(Ct,[["render",dt]]);var Rt=_t;const xt={key:0,id:"file-viewer",class:"docs-page"},jt=["innerHTML"];function $t(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("unknown-page");return a.file?((0,n.wg)(),(0,n.iD)("div",xt,[(0,n.Wm)(o,{path:a.file.path,docs:s.docs},null,8,["path","docs"]),(0,n._)("div",{innerHTML:r.html},null,8,jt)])):((0,n.wg)(),(0,n.j4)(l,{key:1,class:"docs-page",darkMode:s.darkMode},null,8,["darkMode"]))}const Et={class:"source-button"},Ot=["href"],Bt=(0,n._)("em",{class:"fa fa-code"},null,-1),Qt=[Bt];function Ut(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("div",Et,[(0,n._)("a",{href:`${s.meta?r.sourceURL(s.meta.path,s.meta.file,s.meta.line):r.sourceURL(s.path)}`,title:"Source"},Qt,8,Ot)])}var Wt={name:"source-button",props:["meta","path","docs"],methods:{sourceURL(e,t,s){return Be(this.docs.source,this.docs.tag,e,t,s)}}};const At=(0,g.Z)(Wt,[["render",Ut]]);var Gt=At,Lt={name:"file-viewer",props:["docs","darkMode"],components:{SourceButton:Gt},data(){return this.docs.custom[this.$route.params.category]?{file:this.docs.custom[this.$route.params.category].files[this.$route.params.file]}:{file:null}},computed:{html(){let e;return e="md"===this.file.type?this.file.content:`# ${this.file.name}\n\`\`\`${this.file.type}\n${this.file.content}\n\`\`\``,Ha(e)}},mounted(){this.$nextTick((()=>{for(const e of this.$el.querySelectorAll("pre code"))Oe(e)}))}};const Vt=(0,g.Z)(Lt,[["render",$t]]);var Ft=Vt;s(6699);const It={key:0,id:"class-viewer",class:"docs-page"},Ht={class:"class-name-extra"},zt={key:0},Nt=(0,n.Uk)("extends "),Yt={key:1},Kt=(0,n.Uk)(" implements "),Zt={key:0,class:"badge class-badge",title:"This class is abstract, and may not be instantiated itself."},Jt={key:1,class:"badge class-badge warn",title:"This class is deprecated, and may be removed in a future version."},Xt={key:2,class:"badge class-badge warn",title:"This class is private, and may change or be removed at any time."},es=["innerHTML"],ts={key:5,id:"class-constructor"},ss=(0,n._)("h2",null,"Constructor",-1),is={class:"js"},ns=(0,n.Uk)(");"),as={key:6},rs={key:7},os={key:8};function ls(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("type-link"),c=(0,n.up)("types"),p=(0,n.up)("see"),u=(0,n.up)("param-table"),d=(0,n.up)("overview"),m=(0,n.up)("property"),h=(0,n.up)("method"),g=(0,n.up)("event"),y=(0,n.up)("unknown-page");return a.clarse?((0,n.wg)(),(0,n.iD)("div",It,[(0,n.Wm)(o,{meta:a.clarse.meta,docs:s.docs},null,8,["meta","docs"]),(0,n._)("h1",null,(0,b.zw)(a.clarse.name),1),(0,n._)("p",Ht,[a.clarse.extends?((0,n.wg)(),(0,n.iD)("span",zt,[Nt,"string"===typeof a.clarse.extends[0]?((0,n.wg)(),(0,n.j4)(l,{key:0,type:a.clarse.extends,docs:s.docs},null,8,["type","docs"])):((0,n.wg)(!0),(0,n.iD)(n.HY,{key:1},(0,n.Ko)(a.clarse.extends,(e=>((0,n.wg)(),(0,n.j4)(c,{names:e,docs:s.docs,key:r.typeKey(e)},null,8,["names","docs"])))),128))])):(0,n.kq)("",!0),a.clarse.implements?((0,n.wg)(),(0,n.iD)("span",Yt,[Kt,"string"===typeof a.clarse.implements[0]?((0,n.wg)(),(0,n.j4)(l,{key:0,type:a.clarse.implements,docs:s.docs},null,8,["type","docs"])):((0,n.wg)(!0),(0,n.iD)(n.HY,{key:1},(0,n.Ko)(a.clarse.implements,(e=>((0,n.wg)(),(0,n.j4)(c,{names:e,docs:s.docs,key:r.typeKey(e)},null,8,["names","docs"])))),128))])):(0,n.kq)("",!0)]),a.clarse.abstract?((0,n.wg)(),(0,n.iD)("span",Zt,"Abstract")):(0,n.kq)("",!0),a.clarse.deprecated?((0,n.wg)(),(0,n.iD)("span",Jt,"Deprecated")):(0,n.kq)("",!0),"private"===a.clarse.access?((0,n.wg)(),(0,n.iD)("span",Xt,"Private")):(0,n.kq)("",!0),a.clarse.description?((0,n.wg)(),(0,n.iD)("p",{key:3,class:"class-desc",innerHTML:r.description},null,8,es)):(0,n.kq)("",!0),a.clarse.see?((0,n.wg)(),(0,n.j4)(p,{key:4,see:a.clarse.see,docs:s.docs},null,8,["see","docs"])):(0,n.kq)("",!0),a.clarse.construct&&(s.showPrivate||"private"!==a.clarse.construct.access)?((0,n.wg)(),(0,n.iD)("div",ts,[ss,(0,n._)("pre",null,[(0,n._)("code",is,[(0,n.Uk)("new "+(0,b.zw)(s.docs.global)+(0,b.zw)(["v2","3.0.0-beta.33"].includes(a.tag)&&a.clarse.name===s.docs.global?"":`.${a.clarse.name}`)+"(",1),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.constructorParams,(e=>((0,n.wg)(),(0,n.iD)("span",{class:"constructor-param",key:e.name},(0,b.zw)(e.name),1)))),128)),ns])]),a.clarse.construct.params&&a.clarse.construct.params.length>0?((0,n.wg)(),(0,n.j4)(u,{key:0,params:a.clarse.construct.params,docs:s.docs},null,8,["params","docs"])):(0,n.kq)("",!0)])):(0,n.kq)("",!0),(0,n.Wm)(d,{properties:r.properties,methods:r.methods,events:a.clarse.events},null,8,["properties","methods","events"]),r.properties&&r.properties.length>0?((0,n.wg)(),(0,n.iD)("h2",as,"Properties")):(0,n.kq)("",!0),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.properties,(e=>((0,n.wg)(),(0,n.j4)(m,{prop:e,docs:s.docs,key:r.scopedName(e)},null,8,["prop","docs"])))),128)),r.methods&&r.methods.length>0?((0,n.wg)(),(0,n.iD)("h2",rs,"Methods")):(0,n.kq)("",!0),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.methods,(e=>((0,n.wg)(),(0,n.j4)(h,{method:e,docs:s.docs,key:r.scopedName(e)},null,8,["method","docs"])))),128)),a.clarse.events&&a.clarse.events.length>0?((0,n.wg)(),(0,n.iD)("h2",os,"Events")):(0,n.kq)("",!0),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(a.clarse.events,(e=>((0,n.wg)(),(0,n.j4)(g,{event:e,docs:s.docs,key:`e-${e.name}`},null,8,["event","docs"])))),128))])):((0,n.wg)(),(0,n.j4)(y,{key:1,class:"docs-page",darkMode:s.darkMode},null,8,["darkMode"]))}const cs={class:"docs-type"};function ps(e,t,s,i,a,r){const o=(0,n.up)("type-link");return(0,n.wg)(),(0,n.iD)("span",cs,[(0,n.Uk)((0,b.zw)(s.nullable?"?":"")+(0,b.zw)(s.variable?"...":""),1),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.names,(e=>((0,n.wg)(),(0,n.j4)(o,{type:e,docs:s.docs,key:r.typeKey(e)},null,8,["type","docs"])))),128))])}const us={class:"docs-type-link"},ds=["title"],ms=["href"],hs={key:3};function gs(e,t,s,i,a,r){const o=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("span",us,[r.link?"object"===typeof r.link?((0,n.wg)(),(0,n.j4)(o,{key:1,to:r.link},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(r.typeName),1)])),_:1},8,["to"])):((0,n.wg)(),(0,n.iD)("a",{key:2,href:r.link,target:"_blank"},(0,b.zw)(r.typeName),9,ms)):((0,n.wg)(),(0,n.iD)("span",{key:0,title:"*"===s.type[0]?"Any type":null},(0,b.zw)(r.typeName),9,ds)),s.type[1]?((0,n.wg)(),(0,n.iD)("span",hs,(0,b.zw)(s.type[1]),1)):(0,n.kq)("",!0)])}var ys={name:"type-link",props:["docs","type"],computed:{typeName(){return"function"===this.type[0]?"Function":this.type[0]},link(){return this.docs.links[this.type[0]]?this.docs.links[this.type[0]]:null}}};const fs=(0,g.Z)(ys,[["render",gs]]);var bs=fs,Ts={name:"types",props:["names","variable","nullable","docs"],components:{TypeLink:bs},methods:{typeKey:Ae}};const vs=(0,g.Z)(Ts,[["render",ps]]);var Ds=vs;const ks={class:"param-table-wrapper"},ws={class:"param-table"},Ss=(0,n._)("th",null,"Parameter",-1),Ms=(0,n._)("th",null,"Type",-1),Ps={key:0},qs={key:1},Cs=(0,n._)("th",null,"Description",-1),_s={key:0},Rs={key:0,class:"fa fa-check"},xs={key:1},js={key:0},$s=["innerHTML"],Es=["innerHTML"];function Os(e,t,s,i,a,r){const o=(0,n.up)("types");return(0,n.wg)(),(0,n.iD)("div",ks,[(0,n._)("table",ws,[(0,n._)("thead",null,[(0,n._)("tr",null,[Ss,Ms,r.hasOptional?((0,n.wg)(),(0,n.iD)("th",Ps,"Optional")):(0,n.kq)("",!0),r.hasOptional?((0,n.wg)(),(0,n.iD)("th",qs,"Default")):(0,n.kq)("",!0),Cs])]),(0,n._)("tbody",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.params,(e=>((0,n.wg)(),(0,n.iD)("tr",{key:e.name},[(0,n._)("td",null,(0,b.zw)(e.name),1),(0,n._)("td",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(e.type,(t=>((0,n.wg)(),(0,n.j4)(o,{names:t,variable:e.variable,nullable:e.nullable,docs:s.docs,key:r.typeKey(t)},null,8,["names","variable","nullable","docs"])))),128))]),r.hasOptional?((0,n.wg)(),(0,n.iD)("td",_s,[e.optional?((0,n.wg)(),(0,n.iD)("em",Rs)):(0,n.kq)("",!0)])):(0,n.kq)("",!0),r.hasOptional?((0,n.wg)(),(0,n.iD)("td",xs,[e.optional&&"undefined"===typeof e.default?((0,n.wg)(),(0,n.iD)("em",js,"none")):((0,n.wg)(),(0,n.iD)("span",{key:1,innerHTML:r.paramDefault(e)},null,8,$s))])):(0,n.kq)("",!0),(0,n._)("td",{innerHTML:r.paramDescription(e)},null,8,Es)])))),128))])])])}var Bs={name:"param-table",props:["params","docs"],components:{Types:Ds},computed:{hasOptional(){return this.params.some((e=>e.optional))}},methods:{typeKey:Ae,paramDescription(e){return Ha(Ue(e.description,this.docs,this.$router,this.$route))},paramDefault(e){return e.optional?`<code>${e.default}</code>`:""}}};const Qs=(0,g.Z)(Bs,[["render",Os]]);var Us=Qs;const Ws={id:"class-overview"},As={key:0,class:"col"},Gs=(0,n._)("div",{class:"title"},"Properties",-1),Ls=["onClick"],Vs={key:0,class:"small-badge"},Fs={key:1,class:"small-badge"},Is={key:2,class:"small-badge warn"},Hs={key:3,class:"small-badge warn"},zs={key:1,class:"col"},Ns=(0,n._)("div",{class:"title"},"Methods",-1),Ys=["onClick"],Ks={key:0,class:"small-badge"},Zs={key:1,class:"small-badge"},Js={key:2,class:"small-badge warn"},Xs={key:3,class:"small-badge warn"},ei={key:2,class:"col"},ti=(0,n._)("div",{class:"title"},"Events",-1),si=["onClick"],ii={key:0,class:"small-badge warn"};function ni(e,t,s,a,r,o){const l=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("div",Ws,[s.properties&&s.properties.length>0?((0,n.wg)(),(0,n.iD)("div",As,[Gs,(0,n.Wm)(i.W3,{name:"animated-list",tag:"ul"},{default:(0,n.w5)((()=>[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.properties,(e=>((0,n.wg)(),(0,n.iD)("li",{key:o.scopedName(e),onClick:t=>o.scroll(o.scopedName(e)),class:"animated-list-item"},[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:o.scopedName(e)}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name)+" ",1),"static"===e.scope?((0,n.wg)(),(0,n.iD)("span",Vs,"S")):(0,n.kq)("",!0),e.abstract?((0,n.wg)(),(0,n.iD)("span",Fs,"A")):(0,n.kq)("",!0),e.deprecated?((0,n.wg)(),(0,n.iD)("span",Is,"D")):(0,n.kq)("",!0),"private"===e.access?((0,n.wg)(),(0,n.iD)("span",Hs,"P")):(0,n.kq)("",!0)])),_:2},1032,["to"])],8,Ls)))),128))])),_:1})])):(0,n.kq)("",!0),s.methods&&s.methods.length>0?((0,n.wg)(),(0,n.iD)("div",zs,[Ns,(0,n.Wm)(i.W3,{name:"animated-list",tag:"ul"},{default:(0,n.w5)((()=>[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.methods,(e=>((0,n.wg)(),(0,n.iD)("li",{key:o.scopedName(e),onClick:t=>o.scroll(o.scopedName(e)),class:"animated-list-item"},[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:o.scopedName(e)}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name)+" ",1),"static"===e.scope?((0,n.wg)(),(0,n.iD)("span",Ks,"S")):(0,n.kq)("",!0),e.abstract?((0,n.wg)(),(0,n.iD)("span",Zs,"A")):(0,n.kq)("",!0),e.deprecated?((0,n.wg)(),(0,n.iD)("span",Js,"D")):(0,n.kq)("",!0),"private"===e.access?((0,n.wg)(),(0,n.iD)("span",Xs,"P")):(0,n.kq)("",!0)])),_:2},1032,["to"])],8,Ys)))),128))])),_:1})])):(0,n.kq)("",!0),s.events&&s.events.length>0?((0,n.wg)(),(0,n.iD)("div",ei,[ti,(0,n._)("ul",null,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.events,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.name,onClick:t=>o.scroll(`e-${e.name}`)},[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:`e-${e.name}`}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.name)+" ",1),e.deprecated?((0,n.wg)(),(0,n.iD)("span",ii,"D")):(0,n.kq)("",!0)])),_:2},1032,["to"])],8,si)))),128))])])):(0,n.kq)("",!0)])}var ai={name:"class-overview",props:["properties","methods","events"],methods:{scopedName:We,scroll(e){const t=document.getElementById(`doc-for-${e}`);t.setAttribute("data-scrolled",!0),setTimeout((()=>t.setAttribute("data-scrolled",!1)),1e3),setTimeout((()=>t.removeAttribute("data-scrolled")),2e3),t.scrollIntoView(),window.scrollBy(0,-50)}}};const ri=(0,g.Z)(ai,[["render",ni]]);var oi=ri;const li=["id"],ci={key:0,class:"badge",title:"This property is on the class constructor function, not instances."},pi={key:1,class:"badge",title:"This property cannot be modified."},ui={key:2,class:"badge warn",title:"This property is deprecated, and may be removed in a future version."},di={key:3,class:"badge warn",title:"This property is private, and may change or be removed at any time."},mi={class:"class-item-details"},hi=["innerHTML"],gi={class:"prop-type"},yi=(0,n.Uk)(" Type: "),fi={key:1,class:"prop-default"},bi=(0,n.Uk)(" Default: ");function Ti(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("router-link"),c=(0,n.up)("param-table"),p=(0,n.up)("types"),u=(0,n.up)("see");return(0,n.wg)(),(0,n.iD)("div",{class:"class-prop class-item",id:`doc-for-${r.scrollTo}`},[(0,n.Wm)(o,{meta:s.prop.meta,docs:s.docs},null,8,["meta","docs"]),(0,n._)("h3",null,[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:r.scrollTo}}},{default:(0,n.w5)((()=>[(0,n.Uk)("."+(0,b.zw)(s.prop.name),1)])),_:1},8,["to"])]),"static"===s.prop.scope?((0,n.wg)(),(0,n.iD)("span",ci,"Static")):(0,n.kq)("",!0),s.prop.readonly?((0,n.wg)(),(0,n.iD)("span",pi,"Read-only")):(0,n.kq)("",!0),s.prop.deprecated?((0,n.wg)(),(0,n.iD)("span",ui,"Deprecated")):(0,n.kq)("",!0),"private"===s.prop.access?((0,n.wg)(),(0,n.iD)("span",di,"Private")):(0,n.kq)("",!0),(0,n._)("div",mi,[(0,n._)("p",{innerHTML:r.description},null,8,hi),s.prop.props&&s.prop.props.length>0?((0,n.wg)(),(0,n.j4)(c,{key:0,params:s.prop.props,docs:s.docs},null,8,["params","docs"])):(0,n.kq)("",!0),(0,n._)("div",gi,[yi,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.prop.type,(e=>((0,n.wg)(),(0,n.j4)(p,{names:e,nullable:s.prop.nullable,docs:s.docs,key:r.typeKey(e)},null,8,["names","nullable","docs"])))),128))]),s.prop.default?((0,n.wg)(),(0,n.iD)("div",fi,[bi,(0,n._)("code",null,(0,b.zw)(s.prop.default),1)])):(0,n.kq)("",!0),s.prop.see?((0,n.wg)(),(0,n.j4)(u,{key:2,see:s.prop.see,docs:s.docs},null,8,["see","docs"])):(0,n.kq)("",!0)])],8,li)}const vi={class:"docs-see"},Di=(0,n.Uk)(" See also: "),ki={key:0},wi=["href"],Si={key:2},Mi={key:1},Pi=["href"],qi={key:2};function Ci(e,t,s,i,a,r){const o=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("p",vi,[Di,s.see.length>1?((0,n.wg)(),(0,n.iD)("ul",ki,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.parsed,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.text},["object"===typeof e.link?((0,n.wg)(),(0,n.j4)(o,{key:0,to:e.link,class:"docs-type"},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.text),1)])),_:2},1032,["to"])):"string"===typeof e.link?((0,n.wg)(),(0,n.iD)("a",{key:1,href:e.link},(0,b.zw)(e.text),9,wi)):((0,n.wg)(),(0,n.iD)("span",Si,(0,b.zw)(e.text),1))])))),128))])):((0,n.wg)(),(0,n.iD)("span",Mi,["object"===typeof r.parsed[0].link?((0,n.wg)(),(0,n.j4)(o,{key:0,to:r.parsed[0].link,class:"docs-type"},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(r.parsed[0].text),1)])),_:1},8,["to"])):"string"===typeof r.parsed[0].link?((0,n.wg)(),(0,n.iD)("a",{key:1,href:r.parsed[0].link},(0,b.zw)(r.parsed[0].text),9,Pi)):((0,n.wg)(),(0,n.iD)("span",qi,(0,b.zw)(r.parsed[0].text),1))]))])}var _i={name:"docs-see",props:["see","docs"],computed:{parsed(){const e=new Array(this.see.length);for(let t=0;t<this.see.length;t++)e[t]=Qe(this.see[t],this.docs);return e}}};const Ri=(0,g.Z)(_i,[["render",Ci]]);var xi=Ri,ji={name:"class-property",props:["prop","docs"],components:{Types:Ds,ParamTable:Us,SourceButton:Gt,See:xi},computed:{description(){return Ha(Ue(this.prop.description,this.docs,this.$router,this.$route))},scrollTo(){return`${"static"===this.prop.scope?"s-":""}${this.prop.name}`}},methods:{typeKey:Ae}};const $i=(0,g.Z)(ji,[["render",Ti]]);var Ei=$i;const Oi=["id"],Bi=(0,n.Uk)(") "),Qi={key:0,class:"badge",title:"This method is on the class constructor function, not instances."},Ui={key:1,class:"badge",title:"This method is abstract, and must be implemented in a child class."},Wi={key:2,class:"badge warn",title:"This method is deprecated, and may be removed in a future version."},Ai={key:3,class:"badge warn",title:"This method is private, and may change or be removed at any time."},Gi={class:"class-item-details"},Li=["innerHTML"],Vi={class:"method-return"},Fi=(0,n.Uk)(" Returns: "),Ii={key:0},Hi=["innerHTML"],zi={key:1,class:"method-throws"},Ni=(0,n.Uk)(" Throws: "),Yi={key:2,class:"method-emits"},Ki=(0,n.Uk)(" Emits: "),Zi={key:0},Ji={key:3,class:"method-examples"},Xi=(0,n.Uk)(" Examples: "),en={class:"javascript"};function tn(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("router-link"),c=(0,n.up)("param-table"),p=(0,n.up)("types"),u=(0,n.up)("type-link"),d=(0,n.up)("see");return(0,n.wg)(),(0,n.iD)("div",{class:"class-method class-item",id:`doc-for-${r.scrollTo}`},[(0,n.Wm)(o,{meta:s.method.meta,docs:s.docs},null,8,["meta","docs"]),(0,n._)("h3",null,[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:r.scrollTo}}},{default:(0,n.w5)((()=>[(0,n.Uk)(" ."+(0,b.zw)(s.method.name)+"(",1),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.params,(e=>((0,n.wg)(),(0,n.iD)("span",{class:(0,b.C_)(["method-param",e.optional?"optional":""]),key:e.name},(0,b.zw)(e.variable?"...":"")+(0,b.zw)(e.name),3)))),128)),Bi])),_:1},8,["to"])]),"static"===s.method.scope?((0,n.wg)(),(0,n.iD)("span",Qi,"Static")):(0,n.kq)("",!0),s.method.abstract?((0,n.wg)(),(0,n.iD)("span",Ui,"Abstract")):(0,n.kq)("",!0),s.method.deprecated?((0,n.wg)(),(0,n.iD)("span",Wi,"Deprecated")):(0,n.kq)("",!0),"private"===s.method.access?((0,n.wg)(),(0,n.iD)("span",Ai,"Private")):(0,n.kq)("",!0),(0,n._)("div",Gi,[(0,n._)("p",{innerHTML:r.description},null,8,Li),s.method.params?((0,n.wg)(),(0,n.j4)(c,{key:0,params:s.method.params,docs:s.docs},null,8,["params","docs"])):(0,n.kq)("",!0),(0,n._)("div",Vi,[Fi,s.method.returns?((0,n.wg)(),(0,n.iD)("span",Ii,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.method.returns.types||s.method.returns,(e=>((0,n.wg)(),(0,n.j4)(p,{names:e,variable:s.method.returns.variable,nullable:s.method.returns.nullable,docs:s.docs,key:r.typeKey(e)},null,8,["names","variable","nullable","docs"])))),128))])):((0,n.wg)(),(0,n.j4)(u,{key:1,type:["void"],docs:s.docs,class:"docs-type"},null,8,["docs"])),s.method.returns&&s.method.returns.description?((0,n.wg)(),(0,n.iD)("p",{key:2,innerHTML:r.returnDescription},null,8,Hi)):(0,n.kq)("",!0)]),s.method.throws?((0,n.wg)(),(0,n.iD)("div",zi,[Ni,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.method.throws,(e=>((0,n.wg)(),(0,n.j4)(p,{names:e,docs:s.docs,key:e},null,8,["names","docs"])))),128))])):(0,n.kq)("",!0),r.emits?((0,n.wg)(),(0,n.iD)("div",Yi,[Ki,r.emits.length>1?((0,n.wg)(),(0,n.iD)("ul",Zi,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(r.emits,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.text},[(0,n.Wm)(l,{to:e.link,class:"docs-type"},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(e.text),1)])),_:2},1032,["to"])])))),128))])):((0,n.wg)(),(0,n.j4)(l,{key:1,to:r.emits[0].link,class:"docs-type"},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(r.emits[0].text),1)])),_:1},8,["to"]))])):(0,n.kq)("",!0),s.method.examples?((0,n.wg)(),(0,n.iD)("div",Ji,[Xi,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.method.examples,(e=>((0,n.wg)(),(0,n.iD)("pre",{key:e},[(0,n._)("code",en,(0,b.zw)(e),1)])))),128))])):(0,n.kq)("",!0),s.method.see?((0,n.wg)(),(0,n.j4)(d,{key:4,see:s.method.see,docs:s.docs},null,8,["see","docs"])):(0,n.kq)("",!0)])],8,Oi)}var sn={name:"class-method",props:["method","docs"],components:{Types:Ds,TypeLink:bs,ParamTable:Us,SourceButton:Gt,See:xi},computed:{params(){return this.method.params?this.method.params.filter((e=>!e.name.includes("."))):null},description(){return Ha(Ue(this.method.description,this.docs,this.$router,this.$route))},returnDescription(){return Ha(Ue(this.method.returns.description,this.docs,this.$router,this.$route))},emits(){return this.method.emits?this.method.emits.map((e=>Qe(e.replace(/:event/i,""),this.docs))):null},scrollTo(){return`${"static"===this.method.scope?"s-":""}${this.method.name}`}},methods:{typeKey:Ae}};const nn=(0,g.Z)(sn,[["render",tn]]);var an=nn;const rn=["id"],on={key:0,class:"badge warn",title:"This event is deprecated, and may be removed in a future version."},ln={class:"class-item-details"},cn=["innerHTML"],pn={key:1,class:"method-examples"},un=(0,n.Uk)(" Examples: "),dn={class:"javascript"};function mn(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("router-link"),c=(0,n.up)("param-table"),p=(0,n.up)("see");return(0,n.wg)(),(0,n.iD)("div",{class:"class-event class-item",id:`doc-for-e-${s.event.name}`},[(0,n.Wm)(o,{meta:s.event.meta,docs:s.docs},null,8,["meta","docs"]),(0,n._)("h3",null,[(0,n.Wm)(l,{to:{name:"docs-class",query:{scrollTo:`e-${s.event.name}`}}},{default:(0,n.w5)((()=>[(0,n.Uk)((0,b.zw)(s.event.name),1)])),_:1},8,["to"])]),s.event.deprecated?((0,n.wg)(),(0,n.iD)("span",on,"Deprecated")):(0,n.kq)("",!0),(0,n._)("div",ln,[(0,n._)("p",{innerHTML:r.description},null,8,cn),s.event.params&&s.event.params.length>0?((0,n.wg)(),(0,n.j4)(c,{key:0,params:s.event.params,docs:s.docs},null,8,["params","docs"])):(0,n.kq)("",!0),s.event.examples?((0,n.wg)(),(0,n.iD)("div",pn,[un,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.event.examples,(e=>((0,n.wg)(),(0,n.iD)("pre",{key:e},[(0,n._)("code",dn,(0,b.zw)(e),1)])))),128))])):(0,n.kq)("",!0),s.event.see?((0,n.wg)(),(0,n.j4)(p,{key:2,see:s.event.see,docs:s.docs},null,8,["see","docs"])):(0,n.kq)("",!0)])],8,rn)}var hn={name:"class-event",props:["event","docs"],components:{ParamTable:Us,SourceButton:Gt,See:xi},computed:{description(){return Ha(Ue(this.event.description,this.docs,this.$router,this.$route))}}};const gn=(0,g.Z)(hn,[["render",mn]]);var yn=gn,fn={name:"class-viewer",props:["docs","showPrivate","darkMode"],components:{Types:Ds,TypeLink:bs,ParamTable:Us,Overview:oi,Property:Ei,Method:an,Event:yn,SourceButton:Gt,See:xi},data(){return{tag:this.$route.params.tag,clarse:this.docs.classes.find((e=>e.name===this.$route.params.class))}},computed:{constructorParams(){return this.clarse.construct&&this.clarse.construct.params?this.clarse.construct.params.filter((e=>!e.name.includes("."))):null},properties(){if(!this.clarse.props)return null;let e;return e=this.showPrivate?this.clarse.props:this.clarse.props.filter((e=>"private"!==e.access)),e.sort(((e,t)=>`${"static"===e.scope?"ZZZ":""}${e.name}`.localeCompare(`${"static"===t.scope?"ZZZ":""}${t.name}`)))},methods(){if(!this.clarse.methods)return null;let e;return e=this.showPrivate?this.clarse.methods:this.clarse.methods.filter((e=>"private"!==e.access)),e.sort(((e,t)=>`${"static"===e.scope?"ZZZ":""}${e.name}`.localeCompare(`${"static"===t.scope?"ZZZ":""}${t.name}`)))},description(){return Ha(Ue(this.clarse.description,this.docs,this.$router,this.$route))}},methods:{scopedName:We,typeKey:Ae},mounted(){this.$nextTick((()=>{for(const e of this.$el.querySelectorAll("pre code"))Oe(e)}))}};const bn=(0,g.Z)(fn,[["render",ls]]);var Tn=bn;const vn={key:0,id:"typedef-viewer",class:"docs-page"},Dn={key:0,class:"badge warn",title:"This typedef is deprecated, and may be removed in a future version."},kn=["innerHTML"],wn=(0,n._)("h2",null,"Types",-1),Sn={id:"typedef-types"},Mn={key:3,id:"typedef-props"},Pn=(0,n._)("h2",null,"Properties",-1),qn={key:4,id:"typedef-params"},Cn=(0,n._)("h2",null,"Parameters",-1),_n={key:5,id:"typedef-returns"},Rn=(0,n._)("h2",null,"Returns",-1),xn={id:"typedef-returns-types"},jn=["innerHTML"];function $n(e,t,s,i,a,r){const o=(0,n.up)("source-button"),l=(0,n.up)("see"),c=(0,n.up)("types"),p=(0,n.up)("param-table"),u=(0,n.up)("unknown-page");return a.typedef?((0,n.wg)(),(0,n.iD)("div",vn,[(0,n.Wm)(o,{meta:a.typedef.meta,docs:s.docs},null,8,["meta","docs"]),(0,n._)("h1",null,(0,b.zw)(a.typedef.name),1),a.typedef.deprecated?((0,n.wg)(),(0,n.iD)("span",Dn,"Deprecated")):(0,n.kq)("",!0),a.typedef.description?((0,n.wg)(),(0,n.iD)("p",{key:1,innerHTML:r.description,class:"typedef-desc"},null,8,kn)):(0,n.kq)("",!0),a.typedef.see?((0,n.wg)(),(0,n.j4)(l,{key:2,see:a.typedef.see,docs:s.docs},null,8,["see","docs"])):(0,n.kq)("",!0),wn,(0,n._)("ul",Sn,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(a.typedef.type,(e=>((0,n.wg)(),(0,n.iD)("li",{key:r.typeKey(e)},[(0,n.Wm)(c,{names:e,docs:s.docs},null,8,["names","docs"])])))),128))]),a.typedef.props&&a.typedef.props.length>0?((0,n.wg)(),(0,n.iD)("div",Mn,[Pn,(0,n.Wm)(p,{params:a.typedef.props,docs:s.docs},null,8,["params","docs"])])):(0,n.kq)("",!0),a.typedef.params&&a.typedef.params.length>0?((0,n.wg)(),(0,n.iD)("div",qn,[Cn,(0,n.Wm)(p,{params:a.typedef.params,docs:s.docs},null,8,["params","docs"])])):(0,n.kq)("",!0),a.typedef.returns?((0,n.wg)(),(0,n.iD)("div",_n,[Rn,(0,n._)("p",xn,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(a.typedef.returns.types||a.typedef.returns,(e=>((0,n.wg)(),(0,n.j4)(c,{names:e,variable:a.typedef.returns.variable,nullable:a.typedef.returns.nullable,docs:s.docs,key:r.typeKey(e)},null,8,["names","variable","nullable","docs"])))),128))]),a.typedef.returns.description?((0,n.wg)(),(0,n.iD)("p",{key:0,innerHTML:r.returnsDescription},null,8,jn)):(0,n.kq)("",!0)])):(0,n.kq)("",!0)])):((0,n.wg)(),(0,n.j4)(u,{key:1,class:"docs-page",darkMode:s.darkMode},null,8,["darkMode"]))}var En={name:"typedef-viewer",props:["docs","darkMode"],components:{Types:Ds,ParamTable:Us,SourceButton:Gt,See:xi},data(){return{typedef:this.docs.typedefs.find((e=>e.name===this.$route.params.typedef))}},computed:{description(){return Ha(Ue(this.typedef.description,this.docs,this.$router,this.$route))},returnsDescription(){const e=this.typedef.returns;return e?Ha(Ue(e.description,this.docs,this.$router,this.$route)):""}},methods:{typeKey:Ae},mounted(){this.$nextTick((()=>{for(const e of this.$el.querySelectorAll("pre code"))Oe(e)}))}};const On=(0,g.Z)(En,[["render",$n]]);var Bn=On;const Qn={id:"docs-search",class:"docs-page"},Un=["title"],Wn=(0,n._)("h1",null,"Search",-1),An={id:"toggles"},Gn=(0,n.Uk)(" Classes"),Ln=(0,n.Uk)(" Properties"),Vn=(0,n.Uk)(" Methods"),Fn=(0,n.Uk)(" Events"),In=(0,n.Uk)(" Typedefs"),Hn={key:0},zn={key:1},Nn={key:1},Yn={key:1};function Kn(e,t,s,a,r,o){const l=(0,n.up)("search-results"),c=(0,n.Q2)("debounce");return(0,n.wg)(),(0,n.iD)("div",Qn,[(0,n._)("em",{id:"show-scores",class:(0,b.C_)("fa fa-bar-chart "+(r.showScores?"":"disabled")),title:o.toggleScoresLabel,onClick:t[0]||(t[0]=(...e)=>o.toggleScores&&o.toggleScores(...e))},null,10,Un),Wn,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":t[1]||(t[1]=e=>r.search=e),type:"search"},null,512),[[i.nr,r.search,void 0,{lazy:!0,trim:!0}],[c,200]]),(0,n._)("div",An,[(0,n._)("label",null,[(0,n.wy)((0,n._)("input",{type:"checkbox","onUpdate:modelValue":t[2]||(t[2]=e=>r.toggles["classes"]=e)},null,512),[[i.e8,r.toggles["classes"]]]),Gn]),(0,n._)("label",null,[(0,n.wy)((0,n._)("input",{type:"checkbox",class:"secondary","onUpdate:modelValue":t[3]||(t[3]=e=>r.toggles["props"]=e)},null,512),[[i.e8,r.toggles["props"]]]),Ln]),(0,n._)("label",null,[(0,n.wy)((0,n._)("input",{type:"checkbox",class:"tertiary","onUpdate:modelValue":t[4]||(t[4]=e=>r.toggles["methods"]=e)},null,512),[[i.e8,r.toggles["methods"]]]),Vn]),(0,n._)("label",null,[(0,n.wy)((0,n._)("input",{type:"checkbox",class:"quaternary","onUpdate:modelValue":t[5]||(t[5]=e=>r.toggles["events"]=e)},null,512),[[i.e8,r.toggles["events"]]]),Fn]),(0,n._)("label",null,[(0,n.wy)((0,n._)("input",{type:"checkbox",class:"quinary","onUpdate:modelValue":t[6]||(t[6]=e=>r.toggles["typedefs"]=e)},null,512),[[i.e8,r.toggles["typedefs"]]]),In])]),(0,n.Wm)(i.uT,{name:"fade",mode:"out-in"},{default:(0,n.w5)((()=>[r.search&&r.search.length>=2?((0,n.wg)(),(0,n.iD)("div",Hn,[(0,n.Wm)(i.uT,{name:"fade",mode:"out-in"},{default:(0,n.w5)((()=>[o.results.length?((0,n.wg)(),(0,n.j4)(i.W3,{key:0,name:"fade"},{default:(0,n.w5)((()=>[o.fullMatches.length?((0,n.wg)(),(0,n.iD)("div",{key:0,class:(0,b.C_)({"results-separator":o.fullMatches.length&&o.partialMatches.length})},[(0,n._)("h2",null,'Results for "'+(0,b.zw)(r.search)+'" ('+(0,b.zw)(o.fullMatches.length)+")",1),(0,n.Wm)(l,{results:o.fullMatches,showScores:r.showScores,searchTerm:r.search},null,8,["results","showScores","searchTerm"])],2)):(0,n.kq)("",!0),o.partialMatches.length?((0,n.wg)(),(0,n.iD)("div",zn,[(0,n._)("h2",null,'Similar results for "'+(0,b.zw)(r.search)+'" ('+(0,b.zw)(o.partialMatches.length)+")",1),(0,n.Wm)(l,{results:o.partialMatches,showScores:r.showScores,searchTerm:r.search},null,8,["results","showScores","searchTerm"])])):(0,n.kq)("",!0)])),_:1})):((0,n.wg)(),(0,n.iD)("p",Nn,'No results for "'+(0,b.zw)(r.search)+'".',1))])),_:1})])):((0,n.wg)(),(0,n.iD)("p",Yn,"Your search query must be at least two characters."))])),_:1})])}var Zn=s(4221);const Jn={key:0,class:"score"},Xn=["title"],ea=["innerHTML"];function ta(e,t,s,a,r,o){const l=(0,n.up)("router-link");return(0,n.wg)(),(0,n.j4)(i.W3,{name:"animated-list",tag:"ul",class:"results-list"},{default:(0,n.w5)((()=>[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(s.results,(e=>((0,n.wg)(),(0,n.iD)("li",{key:e.item.key||e.item.fullName||e.item.name,class:"animated-list-item"},[s.showScores?((0,n.wg)(),(0,n.iD)("span",Jn,(0,b.zw)(Math.round(100*(1-e.score)))+"%",1)):(0,n.kq)("",!0),(0,n.Wm)(l,{to:e.item.route},{default:(0,n.w5)((()=>[(0,n._)("span",{class:(0,b.C_)(["badge",o.typeClass(e.item.type)]),title:e.item.type},(0,b.zw)(e.item.type[0]),11,Xn),(0,n._)("span",{innerHTML:o.highlightName(e)},null,8,ea),(0,n.Uk)((0,b.zw)("Method"===e.item.type?"()":""),1)])),_:2},1032,["to"])])))),128))])),_:1})}var sa={props:["results","showScores","searchTerm"],methods:{highlightName(e){const t=e.matches.find((e=>"fullName"===e.key));if(!t)return e.item.fullName||e.item.name;let s=t.value;for(let i=t.indices.length-1;i>=0;i--){const e=s.slice(t.indices[i][0],t.indices[i][1]+1),n=s.slice(0,t.indices[i][0]),a=s.slice(t.indices[i][1]+1),r=e.toLowerCase()===this.searchTerm.toLowerCase();s=`${n}${r?"<strong>":""}<em>${e}</em>${r?"</strong>":""}${a}`}return s},typeClass(e){return"Property"===e?"secondary":"Method"===e?"tertiary":"Event"===e?"quaternary":"Typedef"===e?"quinary":""}},computed:{searchRegex(){return new RegExp(this.searchTerm,"ig")}}};const ia=(0,g.Z)(sa,[["render",ta]]);var na=ia,aa={name:"docs-search",props:["docs","showPrivate"],components:{SearchResults:na},directives:{debounce:Ee()},data(){const e={classes:!0,props:!0,methods:!0,events:!0,typedefs:!0};return{toggles:e,search:this.$route.query.q,showScores:!1,fuse:this.buildFuse(e)}},computed:{results(){const e=this.fuse.search(this.search);for(const s of e)"Class"!==s.item.type?"Property"!==s.item.type&&"Method"!==s.item.type?"Event"!==s.item.type?"Typedef"!==s.item.type||(s.item.route={name:"docs-typedef",params:{typedef:s.item.name}}):(s.item.key=`e-${s.item.parent}#${s.item.name}`,s.item.fullName=ra(s.item,s.item.parent),s.item.route={name:"docs-class",params:{class:s.item.parent},query:{scrollTo:`e-${s.item.name}`}}):(s.item.fullName=ra(s.item,s.item.parent),s.item.route={name:"docs-class",params:{class:s.item.parent},query:{scrollTo:We(s.item)}}):s.item.route={name:"docs-class",params:{class:s.item.name}};let t=0;while(t<e.length){const s=e[t];if("Property"===s.item.type||"Method"===s.item.type||"Event"===s.item.type){const i=[];for(const e of s.matches)i.push(e.key);if(2===i.length&&i.includes("parent")&&i.includes("fullName")){e.splice(t,1);continue}}t++}return e},fullMatches(){return this.results.filter((e=>100===Math.round(100*(1-e.score))))},partialMatches(){return this.results.filter((e=>100!==Math.round(100*(1-e.score))))},toggleScoresLabel(){return`Scores are ${this.showScores?"shown":"hidden"}. Click to toggle.`}},methods:{toggleScores(){this.showScores=!this.showScores},buildFuse(e){const t=[];for(const s of this.docs.classes)if(this.showPrivate||"private"!==s.access){if(e.classes&&t.push({type:"Class",parent:s.name,name:s.name,fullName:s.name,scope:s.scope,access:s.access,route:null}),s.props&&e.props)for(const e of s.props)(this.showPrivate||"private"!==e.access)&&t.push({type:"Property",parent:s.name,name:e.name,fullName:ra(e,s.name),scope:e.scope,access:e.access,route:null});if(s.methods&&e.methods)for(const e of s.methods)(this.showPrivate||"private"!==e.access)&&t.push({type:"Method",parent:s.name,name:e.name,fullName:ra(e,s.name),scope:e.scope,access:e.access,route:null});if(s.events&&e.events)for(const e of s.events)(this.showPrivate||"private"!==e.access)&&t.push({type:"Event",parent:s.name,name:e.name,fullName:`${s.name}#${e.name}`,scope:e.scope,access:e.access,key:null,route:null})}if(e.typedefs)for(const s of this.docs.typedefs)(this.showPrivate||"private"!==s.access)&&t.push({type:"Typedef",parent:s.name,name:s.name,fullName:s.name,scope:s.scope,access:s.access,route:null});return new Zn.Z(t,{keys:[{name:"name",weight:.5},{name:"parent",weight:.2},{name:"fullName",weight:.3}],shouldSort:!0,includeScore:!0,includeMatches:!0,ignoreLocation:!0,threshold:.4,minMatchCharLength:3})}},watch:{$route(e){this.search=e.query.q},search(e){this.$route.query.q!==e&&(this.$route.query.q?this.$router.replace({name:"docs-search",query:{q:e}}):this.$router.push({name:"docs-search",query:{q:e}}))},toggles:{deep:!0,handler(){this.fuse=this.buildFuse(this.toggles)}},showPrivate(){this.fuse=this.buildFuse(this.toggles)}}};function ra(e,t){return`${t+("static"===e.scope?".":"#")}${e.name}`}const oa=(0,g.Z)(aa,[["render",Kn]]);var la=oa;const ca=(0,ie.p7)({history:(0,ie.r5)(),routes:[{path:"/",name:"home",component:Se,props:!0},{path:"/docs",name:"docs",component:ze,children:[{path:":source",name:"docs-source",component:rt,props:!0,children:[{path:":tag",name:"docs-tag",component:Rt,props:!0,children:[{path:"search",name:"docs-search",props:!0,component:la},{path:"class/:class",name:"docs-class",props:!0,component:Tn},{path:"typedef/:typedef",name:"docs-typedef",props:!0,component:Bn},{path:":category/:file",name:"docs-file",props:!0,component:Ft}]}]}]},{path:"/:pathMatch(.*)*",name:"not-found",component:Ze},{path:"/:pathMatch(.*)",name:"bad-not-found",component:Ze}]});var pa=ca;const ua={class:"container"};function da(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("div",ua,[(0,n.WI)(e.$slots,"default")])}var ma={name:"container"};const ha=(0,g.Z)(ma,[["render",da]]);var ga=ha;const ya={class:"slide"};function fa(e,t,s,i,a,r){const o=(0,n.up)("container");return(0,n.wg)(),(0,n.iD)("div",ya,[(0,n.Wm)(o,null,{default:(0,n.w5)((()=>[(0,n.WI)(e.$slots,"default")])),_:3})])}var ba={name:"slide"};const Ta=(0,g.Z)(ba,[["render",fa]]);var va=Ta;const Da={class:"sk-folding-cube"},ka=(0,n._)("div",{class:"sk-cube1 sk-cube"},null,-1),wa=(0,n._)("div",{class:"sk-cube2 sk-cube"},null,-1),Sa=(0,n._)("div",{class:"sk-cube4 sk-cube"},null,-1),Ma=(0,n._)("div",{class:"sk-cube3 sk-cube"},null,-1),Pa=[ka,wa,Sa,Ma];function qa(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("div",Da,Pa)}var Ca={name:"loading"};const _a=(0,g.Z)(Ca,[["render",qa]]);var Ra=_a;const xa=(0,n._)("p",null,"This page doesn't actually exist. Oh no!",-1),ja=(0,n._)("p",null,"Instead, please accept this exceptionally awesome piece of artwork:",-1);function $a(e,t,s,i,a,r){const o=(0,n.up)("awesome");return(0,n.wg)(),(0,n.iD)("div",null,[(0,n._)("h1",null,"Unknown "+(0,b.zw)(s.type||"page"),1),xa,ja,(0,n._)("p",null,[(0,n.Wm)(o,{light:s.darkMode},null,8,["light"])])])}const Ea={width:"432.4",height:"567.1",version:"1.1",viewBox:"0 0 114.4 150.1",xmlns:"http://www.w3.org/2000/svg"},Oa=["fill"],Ba=(0,n._)("path",{d:"m36.98 239.8c-0.701-1.163-1.164-2.237-2.31-5.358-0.5341-1.455-1.264-3.301-1.623-4.101-0.3584-0.8004-1.071-2.408-1.584-3.572-1.048-2.38-1.192-2.7-3.641-8.129-0.9667-2.143-2.005-4.703-2.308-5.689-0.6518-2.124-1.094-3.146-3.167-7.312-0.8587-1.726-1.561-3.302-1.561-3.502v-0.3641l-27.38 0.3366-0.191 0.2908c-0.105 0.1599-0.4353 1.092-0.7338 2.072-0.2986 0.9798-0.7809 2.185-1.072 2.678s-0.6905 1.478-0.8878 2.187-0.6848 2.184-1.083 3.275c-1.182 3.236-1.708 5.263-2.123 8.182l-0.3918 2.758-4e-3 3.327-4e-3 3.327-0.3608 1.534c-0.1985 0.8434-0.4296 1.602-0.5136 1.686l-0.1528 0.1528-0.7993-0.3067 0.8625-2.008 0.4067-10.05 0.2774-1.72c0.3197-1.982 0.976-4.316 2.009-7.144 0.3987-1.091 0.8862-2.565 1.083-3.275s0.5939-1.689 0.8815-2.177c0.4808-0.8148 1.606-4.066 1.606-4.64v-0.246l-1.042 0.5576-12.32-0.142 0.04-0.5292c0.022-0.291 0.2165-1.392 0.4322-2.447l0.3921-1.918 0.385-0.596c0.2118-0.3278 0.6039-1.191 0.8714-1.919l0.4864-1.323 2.818-2.802 0.5285-1.036c0.2907-0.5698 0.5285-1.269 0.5285-1.554 0-0.2848 0.2382-1.073 0.5294-1.753l0.5293-1.235 0.1579-2.293 0.1578-2.293 0.5182-2.514c0.285-1.382 0.5806-2.811 0.6569-3.175 0.0763-0.3638 0.4432-1.651 0.8153-2.86l0.6765-2.199-0.8962-0.9331c-0.4929-0.5132-1.313-1.162-1.822-1.442-0.5093-0.2801-1.64-1.103-2.514-1.829-0.8731-0.7256-2.958-2.255-4.633-3.399s-3.216-2.285-3.424-2.536-0.9213-0.8258-1.585-1.277c-0.6632-0.4516-1.958-1.455-2.878-2.229-0.9194-0.7745-2.051-1.604-2.514-1.843-0.9062-0.4684-2.179-1.441-4.119-3.147-0.6715-0.5906-1.876-1.536-2.676-2.101-1.693-1.195-2.7-2.088-8.046-7.128-6.046-5.7-10.86-10.61-12.03-12.27l-0.6213-0.8803 0.5074-0.5074 1.606 1.928c1.585 1.902 5.771 6.111 11.71 11.77 4.193 3.998 5.381 5.047 7.673 6.778 1.091 0.8241 2.639 2.043 3.44 2.708 0.8004 0.6654 2.096 1.627 2.88 2.137 1.306 0.8499 3.627 2.641 7.042 5.434 0.7276 0.5951 2.514 1.896 3.969 2.891s3.301 2.345 4.101 2.999c0.8004 0.6545 1.812 1.385 2.249 1.623 0.4366 0.2384 1.228 0.8496 1.759 1.358l0.9656 0.9246 0.1883-0.623c0.1036-0.3426 0.3401-0.9802 0.5257-1.417 0.1855-0.4366 0.5776-1.449 0.8714-2.249 2.052-5.593 3.5-8.935 4.411-10.19 0.3179-0.4366 0.6577-1.01 0.7551-1.274l0.1771-0.4798 0.2664 0.1647c0.3759 0.2323 0.3308 0.9427-0.0911 1.436-0.7629 0.8912-2.955 5.537-3.827 8.11-0.6586 1.943-1.306 3.67-1.784 4.755-0.1951 0.4432-0.4837 1.382-0.6414 2.085-0.1577 0.7037-0.5273 1.994-0.8214 2.867-0.2941 0.8729-0.6433 2.078-0.7761 2.677-0.1328 0.5995-0.4268 1.923-0.6535 2.942-0.2267 1.019-0.5275 3.144-0.6684 4.723l-0.2563 2.871-0.5542 1.76c-0.3048 0.9678-0.8586 2.39-1.231 3.16l-0.6763 1.4-1.285 1.231c-0.7066 0.6772-1.285 1.332-1.285 1.455s-0.3737 1.023-0.8304 1.999l-0.8304 1.775-0.3603 1.72c-0.1982 0.9458-0.3603 1.75-0.3603 1.786 0 0.0364 2.508 0.0662 5.574 0.0662h5.574l0.8913-0.4757 21.96-0.1639c12.08-0.0902 23.42-0.2332 25.2-0.318l3.241-0.1541v-0.9676l-1.002-1.54c-0.9603-1.477-2.438-4.775-2.438-5.441 0-0.6229-1.427-4.049-2.032-4.878-0.3378-0.4632-0.6142-0.904-0.6142-0.9795s-0.5228-0.8871-1.162-1.804c-0.6389-0.9165-1.49-2.262-1.891-2.989-0.4012-0.7276-1.173-1.859-1.716-2.514-0.5426-0.6548-1.671-2.322-2.507-3.704s-1.982-3.174-2.546-3.98c-0.5644-0.8067-1.026-1.565-1.026-1.685 0-0.12-0.3274-0.6109-0.7276-1.091-0.6424-0.7705-1.055-1.375-2.712-3.975-0.2183-0.3425-1.087-1.152-1.93-1.798l-1.533-1.176-1.087-1.548c-0.5978-0.8516-1.412-1.905-1.809-2.342-0.9476-1.042-1.315-1.788-1.315-2.674v-0.7242l0.4201-0.4642 0.4201-0.4642-0.1786-0.8078-1.275 0.6488c-0.701 0.3568-1.449 0.6488-1.663 0.6488-0.2136 0-0.683 0.193-1.043 0.429l-0.6547 0.429-8.065-0.2761-1.296-0.4224c-1.294-0.4218-4.012-1.846-5.559-2.913-1.841-1.27-4.884-4.663-7.952-8.867-1.322-1.811-1.513-2.153-4.097-7.341l-2.13-4.277v-4.45l0.6839-1.964c0.3762-1.08 1.343-3.63 2.148-5.666l1.464-3.701 1.064-1.855c1.548-2.699 1.775-3.142 1.662-3.255-0.0559-0.0559-0.6431 0.2158-1.305 0.6037l-1.203 0.7053-0.2725-0.1684c-0.1499-0.0926-0.2725-0.2787-0.2725-0.4136v-0.2452l1.521-0.8114c0.8367-0.4463 2.209-1.183 3.05-1.637l1.529-0.8255-0.5438-0.5438v-1.715l0.4831-0.2986 0.1852-1.096c0.2746-1.625 0.8354-2.801 2.152-4.513l1.181-1.535 1.637-1.123c2.127-1.458 2.25-1.529 5.209-2.99 3.923-1.938 5.041-2.391 6.747-2.737l1.588-0.3223 5.778 0.1638 0.2194 0.6615h-6.387l-1.261 0.3039c-1.365 0.329-2.124 0.6261-4.965 1.944-1.019 0.4724-2.031 0.9352-2.249 1.028-0.2183 0.0932-0.7541 0.4049-1.191 0.6928-0.4366 0.2878-0.9711 0.6079-1.188 0.7112-0.2168 0.1033-1.019 0.6254-1.782 1.16l-1.388 0.9723-1.061 1.284c-1.224 1.482-1.967 2.963-2.241 4.471-0.1058 0.5821-0.3093 1.2-0.4523 1.373l-0.26 0.3147 0.1706 1.37 2.117-1.115 5.121 0.3278 1.931-3.295 5.489-5.59 3.387-1.72h2.619l0.2514 0.2331c0.318 0.2949 4.506 1.726 6.606 2.257 0.8759 0.2216 3.495 0.713 5.821 1.092l4.228 0.689 0.4939 0.4824-0.1744 0.1744-0.1744 0.1744-2.983-0.4506c-1.641-0.2478-4.173-0.6896-5.627-0.9818l-2.644-0.5312-2.78-0.9333c-1.529-0.5133-2.893-1.041-3.032-1.173l-0.2514-0.2393h-2.09l-3.409 1.72-5.07 5.29-0.7482 1.269c-0.4115 0.698-0.7482 1.306-0.7482 1.351 0 0.0454 0.8791 0.1489 1.954 0.2302l1.954 0.1478 0.807 0.4173c0.4439 0.2295 1.501 1.06 2.349 1.845l1.542 1.427 3.17-3.162 1.014-0.5217c0.5575-0.287 1.927-0.7622 3.043-1.056l2.029-0.5344 6.937-0.2937 1.162 0.4301c0.6389 0.2365 2.293 0.6714 3.675 0.9664s2.752 0.6388 3.043 0.764 1.303 0.3706 2.249 0.5452c0.9459 0.1746 1.831 0.4255 1.967 0.5574l0.247 0.2398-0.3588 0.3588-1.92-0.3336c-1.056-0.1835-2.158-0.4381-2.449-0.5659-0.291-0.1278-1.87-0.5295-3.51-0.8927s-3.209-0.7826-3.488-0.932l-0.5076-0.2717h-4.728l-2.268 0.3956c-2.154 0.3756-2.628 0.5162-4.583 1.359l-0.8287 0.3573-3.39 3.373 2.207 2.857 1.308 2.51c0.7192 1.38 1.447 2.748 1.616 3.039 0.5083 0.8714 1.651 4.099 2.201 6.218 0.2835 1.091 0.6187 2.342 0.7448 2.778 0.1261 0.4366 0.6651 2.461 1.198 4.498l0.9684 3.704-0.2342 10.58-0.3813 0.9872c-0.2097 0.543-0.4629 1.069-0.5626 1.169-0.0997 0.0997-0.1813 0.3754-0.1813 0.6127v0.4314l-2.117 2.067v1.892l-0.8439 1.205 0.1504 0.5994 0.1504 0.5994 0.8668 0.942c0.4768 0.5181 1.317 1.609 1.867 2.424l0.9997 1.482 3.689 2.944v0.3446c0 0.4518 0.8596 1.22 1.365 1.22h0.3973l3.769-3.307 1.587-1.914c0.8728-1.053 2.099-2.644 2.724-3.536 0.6256-0.8921 1.614-2.303 2.196-3.136 1.387-1.984 3.137-4.171 6.226-7.782 1.387-1.621 2.809-3.364 3.16-3.874 0.3514-0.5093 1.13-1.521 1.729-2.249 1.449-1.759 5.121-6.978 5.95-8.459 0.3638-0.6493 1.125-1.988 1.691-2.975 0.5664-0.9872 1.234-2.367 1.483-3.065l0.4528-1.27 0.4744-0.105 0.171 1.205-0.9593 1.942c-0.5276 1.068-1.37 2.579-1.871 3.357-0.5017 0.7786-0.9121 1.522-0.9121 1.651 0 0.1296-0.4465 0.8078-0.9922 1.507-0.5457 0.6994-1.468 1.954-2.051 2.788s-1.571 2.184-2.198 3c-0.627 0.8156-1.52 2.007-1.984 2.647-0.4644 0.6404-2.035 2.563-3.49 4.273-4.236 4.977-5.58 6.723-8.442 10.97-1.358 2.014-4.155 5.462-5.023 6.193-0.2754 0.2319-1.072 0.9176-1.77 1.524-0.698 0.6063-1.467 1.213-1.71 1.349l-0.4406 0.2466 0.3974 0.7684c0.2186 0.4226 0.6477 0.995 0.9536 1.272s0.5563 0.6286 0.5563 0.7816c0 0.153 0.4618 0.9382 1.026 1.745 0.5644 0.8067 1.71 2.598 2.546 3.98s1.964 3.049 2.507 3.704c0.5426 0.6548 1.315 1.786 1.716 2.514 0.4012 0.7276 1.252 2.073 1.891 2.989 0.6389 0.9165 1.162 1.728 1.162 1.804s0.2764 0.5163 0.6142 0.9795c0.6047 0.8291 2.032 4.256 2.032 4.878 0 0.6707 1.48 3.969 2.452 5.462l1.015 1.561-0.1596 1.906-1.984 0.1639c-1.091 0.0901-5.884 0.1794-10.65 0.1984l-8.665 0.0346v0.2358c0 0.1297 0.7026 1.648 1.561 3.373 2.059 4.139 2.516 5.189 3.146 7.239 0.4673 1.52 1.519 4.024 3.501 8.334 0.3345 0.7276 0.8172 1.799 1.073 2.381 1.202 2.739 2.387 5.422 2.981 6.747 0.3584 0.8004 1.086 2.646 1.617 4.101s1.346 3.414 1.812 4.354 0.8865 1.803 0.935 1.918l0.0882 0.2102h-0.7947zm-26.19-85.76c0.4779-0.202 1.494-0.6393 2.259-0.9718l1.39-0.6044-0.1344-0.8346h1.152l1.626-1.554v-0.4268c0-0.2347 0.0984-0.5399 0.2186-0.6781 0.1202-0.1382 0.3881-0.7871 0.5953-1.442l0.3767-1.191-0.01-5.292-0.01-5.292-0.4248-1.588c-0.2336-0.8731-0.7429-2.719-1.132-4.101-0.3888-1.382-0.9261-3.347-1.194-4.366-0.5314-2.02-1.683-5.245-2.173-6.085-0.1698-0.291-0.893-1.651-1.607-3.021-1.317-2.527-2.839-4.743-3.524-5.128l-0.3762-0.2116v-0.7184l-1.372-1.234c-0.7549-0.6787-1.735-1.422-2.179-1.651l-0.8064-0.417-9.543-0.4566-0.9211 0.4714c-0.5066 0.2593-1.49 0.8641-2.186 1.344l-1.265 0.8725-0.6127 1.238c-0.337 0.6811-1.093 2.073-1.68 3.093l-1.067 1.855-1.464 3.702c-0.8053 2.036-1.772 4.585-2.148 5.666l-0.6839 1.964v3.921l2.183 4.397c1.201 2.418 2.361 4.71 2.58 5.093 1.027 1.802 5.283 7.157 6.983 8.786 1.591 1.525 2.33 2.048 4.659 3.299l1.984 1.066 1.191 0.2905c2.035 0.4965 2.17 0.5101 5.349 0.5416l3.1 0.0307zm-11.43-10.07c-0.1765-0.2126-0.578-0.4671-0.8923-0.5654-0.3143-0.0983-1.069-0.5197-1.677-0.9363-0.6083-0.4166-1.192-0.7575-1.298-0.7575-0.1056 0-0.5778-0.2943-1.049-0.654l-0.8575-0.654-0.8486-2.49v-1.696l-1.112-0.2907 0.1745-0.2824 0.1745-0.2824h6.552l0.2761 0.4467 7.521 0.359 0.7012 0.582v1.523h-0.4814l-0.6105 3.619-1.036 1.704-1.824 0.7619h-3.392zm4.083-0.7832 0.9-0.376 0.4069-0.7868c0.2238-0.4328 0.4846-1.305 0.5796-1.939 0.095-0.6337 0.3521-1.543 0.5714-2.022s0.3492-0.9189 0.2886-0.9795c-0.0606-0.0606-1.713-0.1844-3.673-0.2752l-3.563-0.1651-1.069-0.5134-4.222 0.1568-0.0791 0.68-0.0791 0.68 0.952 2.533 1.191 0.6644c0.6548 0.3654 1.496 0.8805 1.868 1.145 0.3727 0.2642 1.007 0.5631 1.41 0.6642l0.7328 0.1839 0.2785 0.7256h2.606zm-13.18-12.5-0.1764-0.1764v-12.05l0.5753-0.3555 0.3508 0.4566-0.1512 12.3h-0.211c-0.116 0-0.2904-0.0794-0.3874-0.1764zm12.37-5.728c-0.0736-0.1917-0.0996-1.591-0.0578-3.109l0.0759-2.76h0.5292l0.149 6.218h-0.2813c-0.1547 0-0.3415-0.1569-0.4151-0.3486z","stroke-width":".2646"},null,-1),Qa=[Ba];function Ua(e,t,s,i,a,r){return(0,n.wg)(),(0,n.iD)("svg",Ea,[(0,n._)("g",{transform:"translate(58.39 -90.57)",fill:s.light?"white":"black"},Qa,8,Oa)])}var Wa={name:"awesome",props:["light"]};const Aa=(0,g.Z)(Wa,[["render",Ua]]);var Ga=Aa,La={name:"unknown-page",props:["type","darkMode"],components:{Awesome:Ga}};const Va=(0,g.Z)(La,[["render",$a]]);var Fa=Va;const Ia=(0,i.ri)({render:()=>(0,n.h)(te)});Ia.use(pa),Ia.config.productionTip=!1,s(2342),Ia.component("container",ga),Ia.component("slide",va),Ia.component("loading",Ra),Ia.component("unknown-page",Fa),Ia.directive("hljs",Oe);const Ha=e=>(e||(e="**Documentation missing.**"),e=(0,se.TU)(e),e.replace(/<(info|warn)>([\s\S]+)<\/\1>/gi,'<div class="$1">$2</div>'));Ia.mount("#app")},3282:function(e){"use strict";e.exports=JSON.parse('{"meta":{"generator":"0.11.1","format":22,"date":1658789040536},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\\"center\\">\\n  <p>\\n    <a href=\\"https://www.npmjs.com/package/distube\\" target=\\"_blank\\"><img src=\\"https://nodei.co/npm/distube.png?downloads=true&downloadRank=true&stars=true\\"></a>\\n  </p>\\n  <p>\\n    <a href=\\"https://github.com/skick1234/DisTube/actions\\" target=\\"_blank\\"><img alt=\\"GitHub Workflow Status\\" src=\\"https://img.shields.io/github/workflow/status/skick1234/DisTube/Testing?label=Tests&logo=github&style=flat-square\\"></a>\\n    <a href=\\"https://nodejs.org/\\" target=\\"_blank\\"><img alt=\\"node-current\\" src=\\"https://img.shields.io/node/v/distube?logo=node.js&logoColor=white&style=flat-square\\"></a>\\n    <a href=\\"https://discord.js.org/\\" target=\\"_blank\\"><img alt=\\"npm peer dependency version\\" src=\\"https://img.shields.io/npm/dependency-version/distube/peer/discord.js?label=discord.js&logo=discord&logoColor=white&style=flat-square\\"></a>\\n    <a href=\\"https://depfu.com/github/skick1234/DisTube?project_id=36112\\" target=\\"_blank\\"><img alt=\\"Depfu\\" src=\\"https://img.shields.io/depfu/dependencies/github/skick1234/DisTube?style=flat-square\\"></a>\\n    <a href=\\"https://app.codecov.io/gh/skick1234/DisTube\\" target=\\"_blank\\"><img alt=\\"Codecov branch\\" src=\\"https://img.shields.io/codecov/c/github/skick1234/DisTube/main?logo=codecov&logoColor=white&style=flat-square&token=WWDYRRSEQW\\"></a>\\n    <br>\\n    <a href=\\"https://www.npmjs.com/package/distube\\" target=\\"_blank\\"><img alt=\\"npm\\" src=\\"https://img.shields.io/npm/dt/distube?logo=npm&style=flat-square\\"></a>\\n    <a href=\\"https://github.com/skick1234/DisTube/stargazers\\" target=\\"_blank\\"><img alt=\\"GitHub Repo stars\\" src=\\"https://img.shields.io/github/stars/skick1234/DisTube?logo=github&logoColor=white&style=flat-square\\"></a>\\n    <a href=\\"https://discord.gg/feaDd9h\\" target=\\"_blank\\"><img alt=\\"Discord\\" src=\\"https://img.shields.io/discord/732254550689316914?logo=discord&logoColor=white&style=flat-square\\"></a>\\n  </p>\\n</div>\\n\\n# DisTube\\n\\nA Discord.js module to simplify your music commands and play songs with audio filters on Discord without any API key.\\n\\n[DisTube Support Server](https://discord.gg/feaDd9h) - [Frequently Asked Questions](https://discord.gg/feaDd9h)\\n\\n## Features\\n\\n- Based on `@discordjs/voice`\\n- Easy to use and customize\\n- Support YouTube and audio link\\n- Audio filters (bassboost, nightcore, vaporwave,...)\\n- Autoplay related songs\\n- Plugin system to support more sites ([Plugin List](https://distube.js.org/#/docs/DisTube/stable/plugin/list))\\n\\n## Requirement\\n\\n- Node.js 16.9.0 or higher\\n- [discord.js](https://discord.js.org) v14\\n- [@discordjs/voice](https://github.com/discordjs/voice)\\n- [FFmpeg](https://www.ffmpeg.org/download.html)\\n- [@discordjs/opus](https://github.com/discordjs/opus)\\n- [sodium](https://www.npmjs.com/package/sodium) or [libsodium-wrappers](https://www.npmjs.com/package/libsodium-wrappers)\\n\\n## Installation\\n\\n```npm\\nnpm install distube@dev\\n```\\n\\n## Documentation\\n\\nRead DisTube\'s definitions, properties and events details in the [Documentation page](https://distube.js.org/).\\n\\n## Example Bot\\n\\n- [DisTube Bot](https://skick.xyz/DisTube) - A music bot with reaction controller, filters, DJ mode, user\'s custom playlist and voting.\\n- [DisTube Example](https://github.com/distubejs/example) - Example bot with simple command handler.\\n- [DisTube Guide](https://distube.js.org/guide) - How to build a music bot from scratch.\\n\\n## Dependencies\\n\\n- [node-ytdl-core](https://github.com/fent/node-ytdl-core): YouTube scraper ([DisTube Fork](https://github.com/distubejs/node-ytdl-core))\\n- [node-ytsr](https://github.com/TimeForANinja/node-ytsr): YouTube search scraper ([DisTube Fork](https://github.com/distubejs/ytsr))\\n- [node-ytpl](https://github.com/TimeForANinja/node-ytpl): YouTube playlist resolver ([DisTube Fork](https://github.com/distubejs/ytpl))\\n","path":"README.md"},"update":{"name":"Updating to v4","type":"md","content":"# Updating your code\\n\\nv4 contains many new features, optimizations.\\\\\\nVisit [the guide](https://distube.js.org/guide/additional-info/update.html) for help with updating your code from older versions.\\n","path":"pages/general/update.md"}}},"plugin":{"name":"Plugin","files":{"list":{"name":"Plugin List","type":"md","content":"# Official Plugin\\n\\n- [@distube/spotify](https://www.npmjs.com/package/@distube/spotify): Spotify custom plugin.\\n- [@distube/soundcloud](https://www.npmjs.com/package/@distube/soundcloud): SoundCloud extractor plugin.\\n- [@distube/yt-dlp](https://www.npmjs.com/package/@distube/yt-dlp): yt-dlp extractor plugin for supporting 700+ sites.\\n","path":"pages/plugin/list.md"},"dev":{"name":"Plugin Development","type":"md","content":"# Plugin Development (WIP)\\n\\n- Plugins will provide data to DisTube for handling and playing song without having to edit the DisTube files to support other sites.\\n\\n## Extractor Plugin\\n\\n- Example: [@distube/soundcloud](https://www.npmjs.com/package/@distube/soundcloud)\\n\\n## Custom Plugin\\n\\n- Example: [@distube/spotify](https://www.npmjs.com/package/@distube/spotify)\\n","path":"pages/plugin/dev.md"}}}},"classes":[{"name":"DisTube","construct":{"name":"DisTube","description":"Create a new DisTube class.","params":[{"name":"client","description":"Discord.JS client","type":[[["Discord","."],["Client"]]]},{"name":"otp","description":"Custom DisTube options","optional":true,"type":[[["DisTubeOptions"]]]}],"examples":["const Discord = require(\'discord.js\'),\\n    DisTube = require(\'distube\'),\\n    client = new Discord.Client();\\n// Create a new DisTube\\nconst distube = new DisTube.default(client, { searchSongs: 10 });\\n// client.DisTube = distube // make it access easily\\nclient.login(\\"Your Discord Bot Token\\")"]},"props":[{"name":"client","description":"Discord.JS client","type":[[["Discord","."],["Client"]]],"meta":{"line":73,"file":"DisTube.ts","path":"src"}},{"name":"options","description":"DisTube options","type":[[["DisTubeOptions"]]],"meta":{"line":79,"file":"DisTube.ts","path":"src"}},{"name":"voices","description":"Voice connections manager","type":[[["DisTubeVoiceManager"]]],"meta":{"line":84,"file":"DisTube.ts","path":"src"}},{"name":"handler","description":"DisTube\'s Handler","access":"private","type":[[["DisTubeHandler"]]],"meta":{"line":89,"file":"DisTube.ts","path":"src"}},{"name":"queues","description":"Queues manager","type":[[["QueueManager"]]],"meta":{"line":95,"file":"DisTube.ts","path":"src"}},{"name":"filters","description":"DisTube filters","type":[[["Filters"]]],"meta":{"line":100,"file":"DisTube.ts","path":"src"}},{"name":"extractorPlugins","description":"Extractor Plugins","access":"private","type":[[["Array","<"],["ExtractorPlugin",">"]]],"meta":{"line":108,"file":"DisTube.ts","path":"src"}},{"name":"customPlugins","description":"Custom Plugins","access":"private","type":[[["Array","<"],["CustomPlugin",">"]]],"meta":{"line":114,"file":"DisTube.ts","path":"src"}},{"name":"version","description":"DisTube version","type":[[["string"]]],"meta":{"line":126,"file":"DisTube.ts","path":"src"}}],"methods":[{"name":"play","description":"Play / add a song or playlist from url. Search and play a song if it is not a valid url.","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"play\\")\\n        distube.play(message.member.voice.channel, args.join(\\" \\"), {\\n            member: message.member,\\n            textChannel: message.channel,\\n            message\\n        });\\n});"],"params":[{"name":"voiceChannel","description":"The channel will be joined if the bot isn\'t in any channels,\\nthe bot will be moved to this channel if {@link DisTubeOptions}.joinNewVoiceChannel is `true`","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]},{"name":"song","description":"URL | Search string |\\n{@link Song} | {@link SearchResult} | {@link Playlist}","type":[[["string"]],[["Song"]],[["SearchResult"]],[["Playlist"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["PlayOptions"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":134,"file":"DisTube.ts","path":"src"}},{"name":"createCustomPlaylist","description":"Create a custom playlist","examples":["const songs = [\\"https://www.youtube.com/watch?v=xxx\\", \\"https://www.youtube.com/watch?v=yyy\\"];\\nconst playlist = await distube.createCustomPlaylist(songs, {\\n    member: message.member,\\n    properties: { name: \\"My playlist name\\", source: \\"custom\\" },\\n    parallel: true\\n});\\ndistube.play(voiceChannel, playlist, { ... });"],"params":[{"name":"songs","description":"Array of url, Song or SearchResult","type":[[["Array","<"],["string","|"],["Song","|"],["SearchResult",">"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["CustomPlaylistOptions"]]]}],"async":true,"returns":[[["Promise","<"],["Playlist",">"]]],"meta":{"line":224,"file":"DisTube.ts","path":"src"}},{"name":"search","description":"Search for a song. You can customize how user answers instead of send a number.\\nThen use {@link DisTube#play} to play it.","params":[{"name":"string","description":"The string search for","type":[[["string"]]]},{"name":"options","description":"Search options","type":[[["Object"]]]},{"name":"options.limit","description":"Limit the results","optional":true,"default":10,"type":[[["number"]]]},{"name":"options.type","description":"Type of results (`video` or `playlist`).","optional":true,"default":"SearchResultType.VIDEO","type":[[["SearchResultType"]]]},{"name":"options.safeSearch","description":"Whether or not use safe search (YouTube restricted mode)","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Array","<"],["SearchResult",">>"]]],"description":"Array of results"},"meta":{"line":281,"file":"DisTube.ts","path":"src"}},{"name":"getQueue","description":"Get the guild queue","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"queue\\") {\\n        const queue = distube.getQueue(message);\\n        message.channel.send(\'Current queue:\\\\n\' + queue.songs.map((song, id) =>\\n            `**${id+1}**. [${song.name}](${song.url}) - \\\\`${song.formattedDuration}\\\\``\\n        ).join(\\"\\\\n\\"));\\n    }\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Queue"]]],"nullable":true},"meta":{"line":327,"file":"DisTube.ts","path":"src"}},{"name":"pause","description":"Pause the guild stream","params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":349,"file":"DisTube.ts","path":"src"}},{"name":"resume","description":"Resume the guild stream","params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":361,"file":"DisTube.ts","path":"src"}},{"name":"stop","description":"Stop the guild stream","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"stop\\") {\\n        distube.stop(message);\\n        message.channel.send(\\"Stopped the queue!\\");\\n    }\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":373,"file":"DisTube.ts","path":"src"}},{"name":"setVolume","description":"Set the guild stream\'s volume","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"volume\\")\\n        distube.setVolume(message, Number(args[0]));\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]},{"name":"percent","description":"The percentage of volume you want to set","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":395,"file":"DisTube.ts","path":"src"}},{"name":"skip","description":"Skip the playing song if there is a next song in the queue.\\n<info>If {@link Queue#autoplay} is `true` and there is no up next song,\\nDisTube will add and play a related song.</info>","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"skip\\")\\n        distube.skip(message);\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The new Song will be played"},"meta":{"line":416,"file":"DisTube.ts","path":"src"}},{"name":"previous","description":"Play the previous song","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"previous\\")\\n        distube.previous(message);\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The new Song will be played"},"meta":{"line":438,"file":"DisTube.ts","path":"src"}},{"name":"shuffle","description":"Shuffle the guild queue songs","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"shuffle\\")\\n        distube.shuffle(message);\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Promise","<"],["Queue",">"]]],"description":"The guild queue"},"meta":{"line":458,"file":"DisTube.ts","path":"src"}},{"name":"jump","description":"Jump to the song number in the queue.\\nThe next one is 1, 2,...\\nThe previous one is -1, -2,...","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"jump\\")\\n        distube.jump(message, parseInt(args[0]))\\n            .catch(err => message.channel.send(\\"Invalid song number.\\"));\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]},{"name":"num","description":"The song number to play","type":[[["number"]]]}],"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The new Song will be played"},"meta":{"line":477,"file":"DisTube.ts","path":"src"}},{"name":"setRepeatMode","description":"Set the repeat mode of the guild queue.\\\\\\nToggle mode `(Disabled -> Song -> Queue -> Disabled ->...)` if `mode` is `undefined`","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"repeat\\") {\\n        let mode = distube.setRepeatMode(message, parseInt(args[0]));\\n        mode = mode ? mode == 2 ? \\"Repeat queue\\" : \\"Repeat song\\" : \\"Off\\";\\n        message.channel.send(\\"Set repeat mode to `\\" + mode + \\"`\\");\\n    }\\n});","const { RepeatMode } = require(\\"distube\\");\\nlet mode;\\nswitch(distube.setRepeatMode(message, parseInt(args[0]))) {\\n    case RepeatMode.DISABLED:\\n        mode = \\"Off\\";\\n        break;\\n    case RepeatMode.SONG:\\n        mode = \\"Repeat a song\\";\\n        break;\\n    case RepeatMode.QUEUE:\\n        mode = \\"Repeat all queue\\";\\n        break;\\n}\\nmessage.channel.send(\\"Set repeat mode to `\\" + mode + \\"`\\");"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]},{"name":"mode","description":"The repeat modes (toggle if `undefined`)","optional":true,"nullable":true,"type":[[["RepeatMode"]]]}],"returns":{"types":[[["RepeatMode"]]],"description":"The new repeat mode"},"meta":{"line":501,"file":"DisTube.ts","path":"src"}},{"name":"toggleAutoplay","description":"Toggle autoplay mode","examples":["client.on(\'message\', (message) => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command == \\"autoplay\\") {\\n        const mode = distube.toggleAutoplay(message);\\n        message.channel.send(\\"Set autoplay mode to `\\" + (mode ? \\"On\\" : \\"Off\\") + \\"`\\");\\n    }\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["boolean"]]],"description":"Autoplay mode state"},"meta":{"line":540,"file":"DisTube.ts","path":"src"}},{"name":"addRelatedSong","description":"Add related song to the queue","params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The guild queue"},"meta":{"line":563,"file":"DisTube.ts","path":"src"}},{"name":"seek","description":"Set the playing time to another position","examples":["client.on(\'message\', message => {\\n    if (!message.content.startsWith(config.prefix)) return;\\n    const args = message.content.slice(config.prefix.length).trim().split(/ +/g);\\n    const command = args.shift();\\n    if (command = \'seek\')\\n        distube.seek(message, Number(args[0]));\\n});"],"params":[{"name":"guild","description":"The type can be resolved to give a {@link Queue}","type":[[["GuildIdResolvable"]]]},{"name":"time","description":"Time in seconds","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"Seeked queue"},"meta":{"line":574,"file":"DisTube.ts","path":"src"}},{"name":"emitError","description":"Emit error event","access":"private","params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":594,"file":"DisTube.ts","path":"src"}}],"events":[{"name":"addList","description":"Emitted after DisTube add a new playlist to the playing {@link Queue}.","examples":["distube.on(\\"addList\\", (queue, playlist) => queue.textChannel.send(\\n    `Added \\\\`${playlist.name}\\\\` playlist (${playlist.songs.length} songs) to the queue!`\\n));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"playlist","description":"Playlist info","type":[[["Playlist"]]]}],"meta":{"line":617,"file":"DisTube.ts","path":"src"}},{"name":"addSong","description":"Emitted after DisTube add a new song to the playing {@link Queue}.","examples":["distube.on(\\"addSong\\", (queue, song) => queue.textChannel.send(\\n    `Added ${song.name} - \\\\`${song.formattedDuration}\\\\` to the queue by ${song.user}.`\\n));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Added song","type":[[["Song"]]]}],"meta":{"line":629,"file":"DisTube.ts","path":"src"}},{"name":"empty","description":"Emitted when there is no user in the voice channel,\\n{@link DisTubeOptions}.leaveOnEmpty is `true` and there is a playing queue.\\n\\nIf there is no playing queue (stopped and {@link DisTubeOptions}.leaveOnStop is `false`),\\nit will leave the channel without emitting this event.","examples":["distube.on(\\"empty\\", queue => queue.textChannel.send(\\"Channel is empty. Leaving the channel\\"))"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":641,"file":"DisTube.ts","path":"src"}},{"name":"error","description":"Emitted when DisTube encounters an error while playing songs.","examples":["distube.on(\'error\', (channel, e) => {\\n    if (channel) channel.send(`An error encountered: ${e}`)\\n    else console.error(e)\\n})"],"params":[{"name":"channel","description":"Text channel where the error is encountered.","nullable":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]},{"name":"error","description":"The error encountered","type":[[["Error"]]]}],"meta":{"line":653,"file":"DisTube.ts","path":"src"}},{"name":"finish","description":"Emitted when there is no more song in the queue and {@link Queue#autoplay} is `false`.\\nDisTube will leave voice channel if {@link DisTubeOptions}.leaveOnFinish is `true`.","examples":["distube.on(\\"finish\\", queue => queue.textChannel.send(\\"No more song in queue\\"));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":666,"file":"DisTube.ts","path":"src"}},{"name":"initQueue","description":"Emitted when DisTube initialize a queue to change queue default properties.","examples":["distube.on(\\"initQueue\\", queue => {\\n    queue.autoplay = false;\\n    queue.volume = 100;\\n});"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":676,"file":"DisTube.ts","path":"src"}},{"name":"noRelated","description":"Emitted when {@link Queue#autoplay} is `true`, {@link Queue#songs} is empty,\\nand DisTube cannot find related songs to play.","examples":["distube.on(\\"noRelated\\", queue => queue.textChannel.send(\\"Can\'t find related video to play.\\"));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":688,"file":"DisTube.ts","path":"src"}},{"name":"playSong","description":"Emitted when DisTube play a song.\\n\\nIf {@link DisTubeOptions}.emitNewSongOnly is `true`,\\nthis event is not emitted when looping a song or next song is the previous one.","examples":["distube.on(\\"playSong\\", (queue, song) => queue.textChannel.send(\\n    `Playing \\\\`${song.name}\\\\` - \\\\`${song.formattedDuration}\\\\`\\\\nRequested by: ${song.user}`\\n));"],"params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Playing song","type":[[["Song"]]]}],"meta":{"line":698,"file":"DisTube.ts","path":"src"}},{"name":"searchNoResult","description":"Emitted when DisTube cannot find any results for the query.","examples":["distube.on(\\"searchNoResult\\", (message, query) => message.channel.send(`No result found for ${query}!`));"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":713,"file":"DisTube.ts","path":"src"}},{"name":"searchResult","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0,\\nand song param of {@link DisTube#play} is invalid url.\\nDisTube will wait for user\'s next message to choose a song manually.\\n<info>{@link https://support.google.com/youtube/answer/7354993|Safe search} is enabled\\nif {@link DisTubeOptions}.nsfw is disabled and the message\'s channel is not a nsfw channel.</info>","examples":["// DisTubeOptions.searchSongs > 0\\ndistube.on(\\"searchResult\\", (message, results) => {\\n    message.channel.send(`**Choose an option from below**\\\\n${\\n        results.map((song, i) => `**${i + 1}**. ${song.name} - \\\\`${song.formattedDuration}\\\\``).join(\\"\\\\n\\")\\n    }\\\\n*Enter anything else or wait 60 seconds to cancel*`);\\n});"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"results","description":"Searched results","type":[[["Array","<"],["SearchResult",">"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":723,"file":"DisTube.ts","path":"src"}},{"name":"searchCancel","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0,\\nand the search canceled due to {@link DisTubeOptions|DisTubeOptions.searchTimeout}.","examples":["// DisTubeOptions.searchSongs > 0\\ndistube.on(\\"searchCancel\\", (message) => message.channel.send(`Searching canceled`));"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":743,"file":"DisTube.ts","path":"src"}},{"name":"searchInvalidAnswer","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0,\\nand the search canceled due to user\'s next message is not a number or out of results range.","examples":["// DisTubeOptions.searchSongs > 0\\ndistube.on(\\"searchInvalidAnswer\\", (message) => message.channel.send(`You answered an invalid number!`));"],"params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"answer","description":"The answered message of user","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":755,"file":"DisTube.ts","path":"src"}},{"name":"searchDone","description":"Emitted when {@link DisTubeOptions|DisTubeOptions.searchSongs} bigger than 0,\\nand after the user chose a search result to play.","params":[{"name":"message","description":"The user message called play method","type":[[["Discord","."],["Message"]]]},{"name":"answer","description":"The answered message of user","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The search query","type":[[["string"]]]}],"meta":{"line":768,"file":"DisTube.ts","path":"src"}},{"name":"disconnect","description":"Emitted when the bot is disconnected to a voice channel.","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":778,"file":"DisTube.ts","path":"src"}},{"name":"deleteQueue","description":"Emitted when a {@link Queue} is deleted with any reasons.","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"meta":{"line":785,"file":"DisTube.ts","path":"src"}},{"name":"finishSong","description":"Emitted when DisTube finished a song.","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]},{"name":"song","description":"Finished song","type":[[["Song"]]]}],"meta":{"line":792,"file":"DisTube.ts","path":"src"}}],"meta":{"line":56,"file":"DisTube.ts","path":"src"}},{"name":"DisTubeBase","access":"private","abstract":true,"props":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"emit","description":"Emit the {@link DisTube} of this base","params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":4,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"DisTubeHandler","description":"DisTube\'s Handler","extends":[[["DisTubeBase"]]],"access":"private","props":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"getYouTubeInfo","params":[{"name":"url","description":"url","type":[[["string"]]]},{"name":"basic","description":"getBasicInfo?","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["ytdl","."],["videoInfo",">"]]],"meta":{"line":79,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"resolve","description":"Resolve a url or a supported object to a {@link Song} or {@link Playlist}","params":[{"name":"song","description":"URL | {@link Song}| {@link SearchResult} | {@link Playlist}","type":[[["string"]],[["Song"]],[["SearchResult"]],[["Playlist"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["ResolveOptions"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Song","|"],["Playlist","|"],["null",">"]]],"description":"Resolved"},"meta":{"line":101,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"resolvePlaylist","description":"Resolve Song[] or YouTube playlist url to a Playlist","params":[{"name":"playlist","description":"Resolvable playlist","type":[[["Playlist"]],[["Array","<"],["Song",">"]],[["string"]]]},{"name":"options","description":"Optional options","type":[[["ResolvePlaylistOptions"]]]}],"async":true,"returns":[[["Promise","<"],["Playlist",">"]]],"meta":{"line":142,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"searchSong","description":"Search for a song, fire {@link DisTube#event:error} if not found.","params":[{"name":"message","description":"The original message from an user","type":[[["Discord","."],["Message"]]]},{"name":"query","description":"The query string","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<?"],["SearchResult",">"]]],"description":"Song info"},"meta":{"line":175,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"createSearchMessageCollector","description":"Create a message collector for selecting search results.\\n\\nNeeded events: {@link DisTube#event:searchResult}, {@link DisTube#event:searchCancel},\\n{@link DisTube#event:searchInvalidAnswer}, {@link DisTube#event:searchDone}.","params":[{"name":"message","description":"The original message from an user","type":[[["Discord","."],["Message"]]]},{"name":"results","description":"The search results","type":[[["Array","<"],["SearchResult","|"],["Song","|"],["Playlist",">"]]]},{"name":"query","description":"The query string","optional":true,"nullable":true,"type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["SearchResult","|"],["Song","|"],["Playlist","|"],["null",">"]]],"description":"Selected result"},"meta":{"line":202,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"playPlaylist","description":"Play or add a {@link Playlist} to the queue.","params":[{"name":"voiceChannel","description":"A voice channel","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]},{"name":"playlist","description":"A YouTube playlist url | a Playlist","type":[[["Playlist"]],[["string"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["PlayHandlerOptions"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":272,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"playSong","description":"Play or add a {@link Song} to the queue.","params":[{"name":"voiceChannel","description":"A voice channel","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]},{"name":"song","description":"A YouTube playlist url | a Playlist","type":[[["Song"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["PlayHandlerOptions"]]]}],"async":true,"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":313,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":26,"file":"DisTubeHandler.ts","path":"src/core"}},{"name":"DisTubeStream","access":"private","construct":{"name":"DisTubeStream","description":"Create a DisTubeStream to play with {@link DisTubeVoice}","params":[{"name":"url","description":"Stream URL","type":[[["string"]]]},{"name":"options","description":"Stream options","type":[[["StreamOptions"]]]}]},"props":[{"name":"url","description":"Stream URL","type":[[["string"]]],"meta":{"line":70,"file":"DisTubeStream.ts","path":"src/core"}},{"name":"type","description":"Stream type","type":[[["DiscordVoice","."],["StreamType"]]],"meta":{"line":75,"file":"DisTubeStream.ts","path":"src/core"}},{"name":"stream","description":"FFmpeg stream","type":[[["FFmpeg"]]],"meta":{"line":110,"file":"DisTubeStream.ts","path":"src/core"}}],"methods":[{"name":"YouTube","description":"Create a stream from ytdl video formats","scope":"static","access":"private","params":[{"name":"formats","description":"ytdl video formats","type":[[["Array","<"],["ytdl","."],["videoFormat",">"]]]},{"name":"options","description":"options","type":[[["StreamOptions"]]]}],"returns":[[["DisTubeStream"]]],"meta":{"line":28,"file":"DisTubeStream.ts","path":"src/core"}},{"name":"DirectLink","description":"Create a stream from a stream url","scope":"static","access":"private","params":[{"name":"url","description":"stream url","type":[[["string"]]]},{"name":"options","description":"options","type":[[["StreamOptions"]]]}],"returns":[[["DisTubeStream"]]],"meta":{"line":44,"file":"DisTubeStream.ts","path":"src/core"}}],"meta":{"line":63,"file":"DisTubeStream.ts","path":"src/core"}},{"name":"DisTubeVoice","description":"Create a voice connection to the voice channel","props":[{"name":"channelId","description":"The voice channel id the bot is in","nullable":true,"type":[[["Snowflake"]]],"meta":{"line":87,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"playbackDuration","description":"Playback duration of the audio resource in seconds","type":[[["number"]]],"meta":{"line":202,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"selfDeaf","description":"Whether the bot is self-deafened","type":[[["boolean"]]],"meta":{"line":215,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"selfMute","description":"Whether the bot is self-muted","type":[[["boolean"]]],"meta":{"line":222,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"voiceState","description":"The voice state of this connection","nullable":true,"type":[[["Discord","."],["VoiceState"]]],"meta":{"line":257,"file":"DisTubeVoice.ts","path":"src/core"}}],"methods":[{"name":"join","description":"Join a voice channel with this connection","params":[{"name":"channel","description":"A voice channel","optional":true,"type":[[["Discord","."],["BaseGuildVoiceChannel"]]]}],"async":true,"returns":[[["Promise","<"],["DisTubeVoice",">"]]],"meta":{"line":130,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"leave","description":"Leave the voice channel of this connection","params":[{"name":"error","description":"Optional, an error to emit with \'error\' event.","optional":true,"type":[[["Error"]]]}],"meta":{"line":148,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"stop","description":"Stop the playing stream","access":"private","params":[{"name":"force","description":"If true, will force the {@link DisTubeVoice#audioPlayer} to enter the Idle state\\neven if the {@link DisTubeVoice#audioResource} has silence padding frames.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":161,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"play","description":"Play a readable stream","access":"private","params":[{"name":"stream","description":"Readable stream","type":[[["DisTubeStream"]]]}],"meta":{"line":170,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"setSelfDeaf","description":"Self-deafens/undeafens the bot.","params":[{"name":"selfDeaf","description":"Whether or not the bot should be self-deafened","type":[[["boolean"]]]}],"returns":{"types":[[["boolean"]]],"description":"true if the voice state was successfully updated, otherwise false"},"meta":{"line":229,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"setSelfMute","description":"Self-mutes/unmutes the bot.","params":[{"name":"selfMute","description":"Whether or not the bot should be self-muted","type":[[["boolean"]]]}],"returns":{"types":[[["boolean"]]],"description":"true if the voice state was successfully updated, otherwise false"},"meta":{"line":243,"file":"DisTubeVoice.ts","path":"src/core"}}],"meta":{"line":17,"file":"DisTubeVoice.ts","path":"src/core"}},{"name":"BaseManager","description":"Manages the collection of a data model.","extends":[[["DisTubeBase"]]],"access":"private","abstract":true,"props":[{"name":"size","description":"The size of the collection.","abstract":true,"type":[[["Discord","."],["Collection"]]],"meta":{"line":16,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":4,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"DisTubeVoiceManager","description":"Manages voice connections for {@link DisTube}","extends":[[["BaseManager"]]],"props":[{"name":"collection","description":"Collection of {@link DisTubeVoice}.","type":[[["Discord","."],["Collection","<"],["string",", "],["DisTubeVoice",">"]]],"meta":{"line":20,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"size","description":"The size of the collection.","abstract":true,"type":[[["Discord","."],["Collection"]]],"meta":{"line":16,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"get","description":"Get a {@link DisTubeVoice}.","params":[{"name":"guild","description":"The queue resolvable to resolve","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["DisTubeVoice"]]],"nullable":true},"meta":{"line":13,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"create","description":"Create a {@link DisTubeVoice}","access":"private","params":[{"name":"channel","description":"A voice channel to join","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]}],"returns":[[["DisTubeVoice"]]],"meta":{"line":25,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"join","description":"Join a voice channel","params":[{"name":"channel","description":"A voice channel to join","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]}],"returns":[[["Promise","<"],["DisTubeVoice",">"]]],"meta":{"line":39,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"leave","description":"Leave the connected voice channel in a guild","params":[{"name":"guild","description":"Queue Resolvable","type":[[["GuildIdResolvable"]]]}],"meta":{"line":49,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":8,"file":"DisTubeVoiceManager.ts","path":"src/core/manager"}},{"name":"FilterManager","description":"Manage filters of a playing {@link Queue}","extends":[[["BaseManager"]]],"props":[{"name":"names","description":"Array of enabled filter name","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":114,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"size","description":"The size of the collection.","abstract":true,"type":[[["Discord","."],["Collection"]]],"meta":{"line":16,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"add","description":"Enable a filter or multiple filters to the manager","params":[{"name":"filterOrFilters","description":"The filter or filters to enable","type":[[["FilterResolvable"]],[["Array","<"],["FilterResolvable",">"]]]},{"name":"override","description":"Wether or not override the applied filter with new filter value","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["FilterManager"]]],"meta":{"line":40,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"clear","description":"Clear enabled filters of the manager","returns":[[["FilterManager"]]],"meta":{"line":69,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"set","description":"Set the filters applied to the manager","params":[{"name":"filters","description":"The filters to apply","type":[[["Array","<"],["FilterResolvable",">"]]]}],"returns":[[["FilterManager"]]],"meta":{"line":77,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"remove","description":"Disable a filter or multiple filters","params":[{"name":"filterOrFilters","description":"The filter or filters to disable","type":[[["FilterResolvable"]],[["Array","<"],["FilterResolvable",">"]]]}],"returns":[[["FilterManager"]]],"meta":{"line":92,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"has","description":"Check whether a filter enabled or not","params":[{"name":"filter","description":"The filter to check","type":[[["FilterResolvable"]]]}],"returns":[[["boolean"]]],"meta":{"line":105,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":5,"file":"FilterManager.ts","path":"src/core/manager"}},{"name":"GuildIdManager","description":"Manages the collection of a data model paired with a guild id.","extends":[[["BaseManager"]]],"access":"private","abstract":true,"props":[{"name":"size","description":"The size of the collection.","abstract":true,"type":[[["Discord","."],["Collection"]]],"meta":{"line":16,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":5,"file":"GuildIdManager.ts","path":"src/core/manager"}},{"name":"QueueManager","description":"Queue manager","extends":[[["GuildIdManager"]]],"props":[{"name":"collection","description":"Collection of {@link Queue}.","type":[[["Discord","."],["Collection","<"],["string",", "],["Queue",">"]]],"meta":{"line":11,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"size","description":"The size of the collection.","abstract":true,"type":[[["Discord","."],["Collection"]]],"meta":{"line":16,"file":"BaseManager.ts","path":"src/core/manager"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"create","description":"Create a {@link Queue}","access":"private","params":[{"name":"channel","description":"A voice channel","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]},{"name":"song","description":"First song","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"textChannel","description":"Default text channel","type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Queue","|"],["true",">"]]],"description":"Returns `true` if encounter an error"},"meta":{"line":16,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"get","description":"Get a Queue from this QueueManager.","params":[{"name":"guild","description":"Resolvable thing from a guild","type":[[["GuildIdResolvable"]]]}],"returns":{"types":[[["Queue"]]],"nullable":true},"meta":{"line":44,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"createStream","description":"Create a ytdl stream","params":[{"name":"queue","description":"Queue","type":[[["Queue"]]]}],"returns":[[["DisTubeStream"]]],"meta":{"line":141,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"playSong","description":"Play a song on voice connection","access":"private","params":[{"name":"queue","description":"The guild queue","type":[[["Queue"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"error?"},"meta":{"line":155,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":6,"file":"QueueManager.ts","path":"src/core/manager"}},{"name":"CustomPlugin","description":"Custom Plugin","extends":[[["Plugin"]]],"abstract":true,"props":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":24,"file":"Plugin.ts","path":"src/struct"}},{"name":"type","description":"Type of the plugin","type":[[["PluginType"]]],"meta":{"line":30,"file":"Plugin.ts","path":"src/struct"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":52,"file":"Plugin.ts","path":"src/struct"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":60,"file":"Plugin.ts","path":"src/struct"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":68,"file":"Plugin.ts","path":"src/struct"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":76,"file":"Plugin.ts","path":"src/struct"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":84,"file":"Plugin.ts","path":"src/struct"}}],"methods":[{"name":"play","description":"This method will be executed if the url is validated.","abstract":true,"params":[{"name":"voiceChannel","description":"The voice channel will be joined","type":[[["Discord","."],["BaseGuildVoiceChannel"]]]},{"name":"song","description":"Validated `song`","type":[[["string"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["PlayOptions"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":16,"file":"CustomPlugin.ts","path":"src/struct"}},{"name":"validate","description":"Check if the string is working with this plugin","params":[{"name":"string","description":"String need to validate","type":[[["string"]]]}],"returns":[[["boolean"]],[["Promise","<"],["boolean",">"]]],"meta":{"line":27,"file":"CustomPlugin.ts","path":"src/struct"}},{"name":"emit","description":"Emit an event to the {@link DisTube} class","inherits":"Plugin#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":35,"file":"Plugin.ts","path":"src/struct"}},{"name":"emitError","description":"Emit error event to the {@link DisTube} class","inherits":"Plugin#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":44,"file":"Plugin.ts","path":"src/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default.\\nNot needed if the plugin plays song from YouTube.","inherits":"Plugin#getStreamURL","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"returns":[[["string"]],[["Promise","<"],["string",">"]]],"meta":{"line":100,"file":"Plugin.ts","path":"src/struct"}},{"name":"getRelatedSongs","description":"Get related songs from a supported url. {@link Song#member} should be `undefined`.\\nNot needed to add {@link Song#related} because it will be added with this function later.","inherits":"Plugin#getRelatedSongs","inherited":true,"params":[{"name":"_url","description":"Input url","type":[[["string"]]]}],"returns":[[["Array","<"],["Song",">"]],[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":109,"file":"Plugin.ts","path":"src/struct"}}],"meta":{"line":6,"file":"CustomPlugin.ts","path":"src/struct"}},{"name":"ExtractorPlugin","description":"Extractor Plugin","extends":[[["Plugin"]]],"abstract":true,"props":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":24,"file":"Plugin.ts","path":"src/struct"}},{"name":"type","description":"Type of the plugin","type":[[["PluginType"]]],"meta":{"line":30,"file":"Plugin.ts","path":"src/struct"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":52,"file":"Plugin.ts","path":"src/struct"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":60,"file":"Plugin.ts","path":"src/struct"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":68,"file":"Plugin.ts","path":"src/struct"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":76,"file":"Plugin.ts","path":"src/struct"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":84,"file":"Plugin.ts","path":"src/struct"}}],"methods":[{"name":"resolve","description":"Resolve the validated url to a {@link Song} or a {@link Playlist}.","abstract":true,"params":[{"name":"url","description":"URL","type":[[["string"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"options.metadata","description":"Metadata","optional":true,"type":[["*"]]}],"returns":[[["Song"]],[["Playlist"]],[["Promise","<"],["Song","|"],["Playlist",">"]]],"meta":{"line":19,"file":"ExtractorPlugin.ts","path":"src/struct"}},{"name":"validate","description":"Check if the url is working with this plugin","params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"returns":[[["boolean"]],[["Promise","<"],["boolean",">"]]],"meta":{"line":32,"file":"ExtractorPlugin.ts","path":"src/struct"}},{"name":"emit","description":"Emit an event to the {@link DisTube} class","inherits":"Plugin#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":35,"file":"Plugin.ts","path":"src/struct"}},{"name":"emitError","description":"Emit error event to the {@link DisTube} class","inherits":"Plugin#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":44,"file":"Plugin.ts","path":"src/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default.\\nNot needed if the plugin plays song from YouTube.","inherits":"Plugin#getStreamURL","inherited":true,"params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"returns":[[["string"]],[["Promise","<"],["string",">"]]],"meta":{"line":100,"file":"Plugin.ts","path":"src/struct"}},{"name":"getRelatedSongs","description":"Get related songs from a supported url. {@link Song#member} should be `undefined`.\\nNot needed to add {@link Song#related} because it will be added with this function later.","inherits":"Plugin#getRelatedSongs","inherited":true,"params":[{"name":"_url","description":"Input url","type":[[["string"]]]}],"returns":[[["Array","<"],["Song",">"]],[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":109,"file":"Plugin.ts","path":"src/struct"}}],"meta":{"line":6,"file":"ExtractorPlugin.ts","path":"src/struct"}},{"name":"Playlist","description":"Class representing a playlist.","construct":{"name":"Playlist","description":"Create a playlist","params":[{"name":"playlist","description":"Playlist","type":[[["Array","<"],["Song",">"]],[["PlaylistInfo"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"options.properties","description":"Custom properties","optional":true,"type":[[["Object"]]]},{"name":"options.metadata","description":"Playlist metadata","optional":true,"type":[[["T"]]]}]},"props":[{"name":"source","description":"The source of the playlist","type":[[["string"]]],"meta":{"line":48,"file":"Playlist.ts","path":"src/struct"}},{"name":"songs","description":"Playlist songs.","type":[[["Array","<"],["Song",">"]]],"meta":{"line":54,"file":"Playlist.ts","path":"src/struct"}},{"name":"name","description":"Playlist name.","type":[[["string"]]],"meta":{"line":59,"file":"Playlist.ts","path":"src/struct"}},{"name":"url","description":"Playlist URL.","type":[[["string"]]],"meta":{"line":79,"file":"Playlist.ts","path":"src/struct"}},{"name":"thumbnail","description":"Playlist thumbnail.","nullable":true,"type":[[["string"]]],"meta":{"line":85,"file":"Playlist.ts","path":"src/struct"}},{"name":"metadata","description":"Optional metadata that can be used to identify the playlist.","type":[[["T"]]],"meta":{"line":94,"file":"Playlist.ts","path":"src/struct"}},{"name":"duration","description":"Playlist duration in second.","type":[[["number"]]],"meta":{"line":101,"file":"Playlist.ts","path":"src/struct"}},{"name":"formattedDuration","description":"Formatted duration string `hh:mm:ss`.","type":[[["string"]]],"meta":{"line":109,"file":"Playlist.ts","path":"src/struct"}},{"name":"member","description":"User requested.","nullable":true,"type":[[["Discord","."],["GuildMember"]]],"meta":{"line":117,"file":"Playlist.ts","path":"src/struct"}},{"name":"user","description":"User requested.","nullable":true,"type":[[["Discord","."],["User"]]],"meta":{"line":131,"file":"Playlist.ts","path":"src/struct"}}],"meta":{"line":5,"file":"Playlist.ts","path":"src/struct"}},{"name":"Plugin","description":"DisTube Plugin","access":"private","abstract":true,"props":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":24,"file":"Plugin.ts","path":"src/struct"}},{"name":"type","description":"Type of the plugin","type":[[["PluginType"]]],"meta":{"line":30,"file":"Plugin.ts","path":"src/struct"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":52,"file":"Plugin.ts","path":"src/struct"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":60,"file":"Plugin.ts","path":"src/struct"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":68,"file":"Plugin.ts","path":"src/struct"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":76,"file":"Plugin.ts","path":"src/struct"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":84,"file":"Plugin.ts","path":"src/struct"}}],"methods":[{"name":"emit","description":"Emit an event to the {@link DisTube} class","params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":35,"file":"Plugin.ts","path":"src/struct"}},{"name":"emitError","description":"Emit error event to the {@link DisTube} class","params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":44,"file":"Plugin.ts","path":"src/struct"}},{"name":"validate","description":"Check if the string is working with this plugin","params":[{"name":"_string","description":"Input string","type":[[["string"]]]}],"returns":[[["boolean"]],[["Promise","<"],["boolean",">"]]],"meta":{"line":92,"file":"Plugin.ts","path":"src/struct"}},{"name":"getStreamURL","description":"Get the stream url from {@link Song#url}. Returns {@link Song#url} by default.\\nNot needed if the plugin plays song from YouTube.","params":[{"name":"url","description":"Input url","type":[[["string"]]]}],"returns":[[["string"]],[["Promise","<"],["string",">"]]],"meta":{"line":100,"file":"Plugin.ts","path":"src/struct"}},{"name":"getRelatedSongs","description":"Get related songs from a supported url. {@link Song#member} should be `undefined`.\\nNot needed to add {@link Song#related} because it will be added with this function later.","params":[{"name":"_url","description":"Input url","type":[[["string"]]]}],"returns":[[["Array","<"],["Song",">"]],[["Promise","<"],["Array","<"],["Song",">>"]]],"meta":{"line":109,"file":"Plugin.ts","path":"src/struct"}}],"meta":{"line":15,"file":"Plugin.ts","path":"src/struct"}},{"name":"Queue","description":"Represents a queue.","extends":[[["DisTubeBase"]]],"construct":{"name":"Queue","description":"Create a queue for the guild","params":[{"name":"distube","description":"DisTube","type":[[["DisTube"]]]},{"name":"voice","description":"Voice connection","type":[[["DisTubeVoice"]]]},{"name":"song","description":"First song(s)","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"textChannel","description":"Default text channel","nullable":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}]},"props":[{"name":"id","description":"Queue id (Guild id)","type":[[["Discord","."],["Snowflake"]]],"meta":{"line":42,"file":"Queue.ts","path":"src/struct"}},{"name":"volume","description":"Get or set the stream volume. Default value: `50`.","type":[[["number"]]],"meta":{"line":47,"file":"Queue.ts","path":"src/struct"}},{"name":"songs","description":"List of songs in the queue (The first one is the playing song)","type":[[["Array","<"],["Song",">"]]],"meta":{"line":52,"file":"Queue.ts","path":"src/struct"}},{"name":"previousSongs","description":"List of the previous songs.","type":[[["Array","<"],["Song",">"]]],"meta":{"line":57,"file":"Queue.ts","path":"src/struct"}},{"name":"stopped","description":"Whether stream is currently stopped.","access":"private","type":[[["boolean"]]],"meta":{"line":62,"file":"Queue.ts","path":"src/struct"}},{"name":"_next","description":"Whether or not the last song was skipped to next song.","access":"private","type":[[["boolean"]]],"meta":{"line":68,"file":"Queue.ts","path":"src/struct"}},{"name":"_prev","description":"Whether or not the last song was skipped to previous song.","access":"private","type":[[["boolean"]]],"meta":{"line":74,"file":"Queue.ts","path":"src/struct"}},{"name":"playing","description":"Whether or not the stream is currently playing.","type":[[["boolean"]]],"meta":{"line":80,"file":"Queue.ts","path":"src/struct"}},{"name":"paused","description":"Whether or not the stream is currently paused.","type":[[["boolean"]]],"meta":{"line":85,"file":"Queue.ts","path":"src/struct"}},{"name":"repeatMode","description":"Type of repeat mode (`0` is disabled, `1` is repeating a song, `2` is repeating all the queue).\\nDefault value: `0` (disabled)","type":[[["RepeatMode"]]],"meta":{"line":90,"file":"Queue.ts","path":"src/struct"}},{"name":"autoplay","description":"Whether or not the autoplay mode is enabled.\\nDefault value: `false`","type":[[["boolean"]]],"meta":{"line":96,"file":"Queue.ts","path":"src/struct"}},{"name":"beginTime","description":"What time in the song to begin (in seconds).","type":[[["number"]]],"meta":{"line":103,"file":"Queue.ts","path":"src/struct"}},{"name":"textChannel","description":"The text channel of the Queue. (Default: where the first command is called).","nullable":true,"type":[[["Discord","."],["TextChannel"]]],"meta":{"line":108,"file":"Queue.ts","path":"src/struct"}},{"name":"_emptyTimeout","description":"Timeout for checking empty channel","access":"private","type":[["*"]],"meta":{"line":113,"file":"Queue.ts","path":"src/struct"}},{"name":"_taskQueue","description":"Task queuing system","access":"private","type":[[["TaskQueue"]]],"meta":{"line":119,"file":"Queue.ts","path":"src/struct"}},{"name":"_listeners","description":"DisTubeVoice listener","access":"private","type":[[["Object"]]],"meta":{"line":125,"file":"Queue.ts","path":"src/struct"}},{"name":"clientMember","description":"The client user as a `GuildMember` of this queue\'s guild","nullable":true,"type":[[["Discord","."],["GuildMember"]]],"meta":{"line":132,"file":"Queue.ts","path":"src/struct"}},{"name":"filters","description":"The filter manager of the queue","readonly":true,"type":[[["FilterManager"]]],"meta":{"line":139,"file":"Queue.ts","path":"src/struct"}},{"name":"formattedDuration","description":"Formatted duration string.","readonly":true,"type":[[["string"]]],"meta":{"line":147,"file":"Queue.ts","path":"src/struct"}},{"name":"duration","description":"Queue\'s duration.","readonly":true,"type":[[["number"]]],"meta":{"line":155,"file":"Queue.ts","path":"src/struct"}},{"name":"currentTime","description":"What time in the song is playing (in seconds).","readonly":true,"type":[[["number"]]],"meta":{"line":163,"file":"Queue.ts","path":"src/struct"}},{"name":"formattedCurrentTime","description":"Formatted {@link Queue#currentTime} string.","readonly":true,"type":[[["string"]]],"meta":{"line":171,"file":"Queue.ts","path":"src/struct"}},{"name":"voiceChannel","description":"The voice channel playing in.","readonly":true,"type":[[["Discord","."],["VoiceChannel"]],[["Discord","."],["StageChannel"]],[["null"]]],"meta":{"line":179,"file":"Queue.ts","path":"src/struct"}},{"name":"distube","description":"DisTube","type":[[["DisTube"]]],"meta":{"line":11,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"queues","description":"The queue manager","readonly":true,"type":[[["QueueManager"]]],"meta":{"line":34,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"voices","description":"The voice manager","readonly":true,"type":[[["DisTubeVoiceManager"]]],"meta":{"line":42,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"client","description":"Discord.js client","readonly":true,"type":[[["Discord","."],["Client"]]],"meta":{"line":50,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"options","description":"DisTube options","readonly":true,"type":[[["DisTubeOptions"]]],"meta":{"line":58,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"handler","description":"DisTube handler","readonly":true,"type":[[["DisTubeHandler"]]],"meta":{"line":66,"file":"DisTubeBase.ts","path":"src/core"}}],"methods":[{"name":"addToQueue","access":"private","params":[{"name":"song","description":"Song to add","type":[[["Song"]],[["Array","<"],["Song",">"]]]},{"name":"position","description":"Position to add, <= 0 to add to the end of the queue","optional":true,"default":0,"type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":193,"file":"Queue.ts","path":"src/struct"}},{"name":"pause","description":"Pause the guild stream","returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":220,"file":"Queue.ts","path":"src/struct"}},{"name":"resume","description":"Resume the guild stream","returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":231,"file":"Queue.ts","path":"src/struct"}},{"name":"setVolume","description":"Set the guild stream\'s volume","params":[{"name":"percent","description":"The percentage of volume you want to set","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":242,"file":"Queue.ts","path":"src/struct"}},{"name":"skip","description":"Skip the playing song if there is a next song in the queue.\\n<info>If {@link Queue#autoplay} is `true` and there is no up next song,\\nDisTube will add and play a related song.</info>","async":true,"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The song will skip to"},"meta":{"line":252,"file":"Queue.ts","path":"src/struct"}},{"name":"previous","description":"Play the previous song if exists","async":true,"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The guild queue"},"meta":{"line":275,"file":"Queue.ts","path":"src/struct"}},{"name":"shuffle","description":"Shuffle the queue\'s songs","async":true,"returns":{"types":[[["Promise","<"],["Queue",">"]]],"description":"The guild queue"},"meta":{"line":296,"file":"Queue.ts","path":"src/struct"}},{"name":"jump","description":"Jump to the song position in the queue.\\nThe next one is 1, 2,...\\nThe previous one is -1, -2,...","params":[{"name":"position","description":"The song position to play","type":[[["number"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The new Song will be played"},"meta":{"line":315,"file":"Queue.ts","path":"src/struct"}},{"name":"setRepeatMode","description":"Set the repeat mode of the guild queue.\\\\\\nToggle mode `(Disabled -> Song -> Queue -> Disabled ->...)` if `mode` is `undefined`","params":[{"name":"mode","description":"The repeat modes (toggle if `undefined`)","optional":true,"nullable":true,"type":[[["RepeatMode"]]]}],"returns":{"types":[[["RepeatMode"]]],"description":"The new repeat mode"},"meta":{"line":354,"file":"Queue.ts","path":"src/struct"}},{"name":"seek","description":"Set the playing time to another position","params":[{"name":"time","description":"Time in seconds","type":[[["number"]]]}],"returns":{"types":[[["Queue"]]],"description":"The guild queue"},"meta":{"line":369,"file":"Queue.ts","path":"src/struct"}},{"name":"addRelatedSong","description":"Add a related song of the playing song to the queue","async":true,"returns":{"types":[[["Promise","<"],["Song",">"]]],"description":"The added song"},"meta":{"line":381,"file":"Queue.ts","path":"src/struct"}},{"name":"stop","description":"Stop the guild stream and delete the queue","async":true,"meta":{"line":395,"file":"Queue.ts","path":"src/struct"}},{"name":"remove","description":"Remove the queue from the manager\\n(This does not leave the voice channel even if {@link DisTubeOptions|DisTubeOptions.leaveOnStop} is enabled)","access":"private","meta":{"line":411,"file":"Queue.ts","path":"src/struct"}},{"name":"toggleAutoplay","description":"Toggle autoplay mode","returns":{"types":[[["boolean"]]],"description":"Autoplay mode state"},"meta":{"line":428,"file":"Queue.ts","path":"src/struct"}},{"name":"emit","description":"Emit the {@link DisTube} of this base","inherits":"DisTubeBase#emit","inherited":true,"params":[{"name":"eventName","description":"Event name","type":[[["string"]]]},{"name":"args","description":"arguments","variable":true,"type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":17,"file":"DisTubeBase.ts","path":"src/core"}},{"name":"emitError","description":"Emit error event","inherits":"DisTubeBase#emitError","inherited":true,"params":[{"name":"error","description":"error","type":[[["Error"]]]},{"name":"channel","description":"Text channel where the error is encountered.","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]}],"meta":{"line":26,"file":"DisTubeBase.ts","path":"src/core"}}],"meta":{"line":6,"file":"Queue.ts","path":"src/struct"}},{"name":"ISearchResult","description":"A abstract class representing a search result.","access":"private","abstract":true,"construct":{"name":"ISearchResult","description":"Create a search result","params":[{"name":"info","description":"ytsr result","type":[[["Object"]]]}]},"props":[{"name":"source","description":"The source of the search result","type":[[["\\"youtube","\\""]]],"meta":{"line":25,"file":"SearchResult.ts","path":"src/struct"}},{"name":"id","description":"YouTube video or playlist id","type":[[["string"]]],"meta":{"line":30,"file":"SearchResult.ts","path":"src/struct"}},{"name":"name","description":"Video or playlist title.","type":[[["string"]]],"meta":{"line":35,"file":"SearchResult.ts","path":"src/struct"}},{"name":"url","description":"Video or playlist URL.","type":[[["string"]]],"meta":{"line":40,"file":"SearchResult.ts","path":"src/struct"}},{"name":"uploader","description":"Video or playlist uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":45,"file":"SearchResult.ts","path":"src/struct"}}],"meta":{"line":4,"file":"SearchResult.ts","path":"src/struct"}},{"name":"SearchResultVideo","description":"A class representing a video search result.","extends":[[["ISearchResult"]]],"props":[{"name":"type","description":"Type of SearchResult","type":[[["SearchResultType","."],["VIDEO"]]],"meta":{"line":72,"file":"SearchResult.ts","path":"src/struct"}},{"name":"views","description":"Video views count","type":[[["number"]]],"meta":{"line":77,"file":"SearchResult.ts","path":"src/struct"}},{"name":"isLive","description":"Indicates if the video is an active live.","type":[[["boolean"]]],"meta":{"line":82,"file":"SearchResult.ts","path":"src/struct"}},{"name":"duration","description":"Video duration.","type":[[["number"]]],"meta":{"line":87,"file":"SearchResult.ts","path":"src/struct"}},{"name":"formattedDuration","description":"Formatted duration string `hh:mm:ss` or `mm:ss`.","type":[[["string"]]],"meta":{"line":92,"file":"SearchResult.ts","path":"src/struct"}},{"name":"thumbnail","description":"Video thumbnail.","type":[[["string"]]],"meta":{"line":97,"file":"SearchResult.ts","path":"src/struct"}},{"name":"source","description":"The source of the search result","type":[[["\\"youtube","\\""]]],"meta":{"line":25,"file":"SearchResult.ts","path":"src/struct"}},{"name":"id","description":"YouTube video or playlist id","type":[[["string"]]],"meta":{"line":30,"file":"SearchResult.ts","path":"src/struct"}},{"name":"name","description":"Video or playlist title.","type":[[["string"]]],"meta":{"line":35,"file":"SearchResult.ts","path":"src/struct"}},{"name":"url","description":"Video or playlist URL.","type":[[["string"]]],"meta":{"line":40,"file":"SearchResult.ts","path":"src/struct"}},{"name":"uploader","description":"Video or playlist uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":45,"file":"SearchResult.ts","path":"src/struct"}}],"meta":{"line":58,"file":"SearchResult.ts","path":"src/struct"}},{"name":"SearchResultPlaylist","description":"A class representing a playlist search result.","extends":[[["ISearchResult"]]],"props":[{"name":"type","description":"Type of SearchResult","type":[[["SearchResultType","."],["PLAYLIST"]]],"meta":{"line":125,"file":"SearchResult.ts","path":"src/struct"}},{"name":"length","description":"Length of the playlist","type":[[["number"]]],"meta":{"line":130,"file":"SearchResult.ts","path":"src/struct"}},{"name":"source","description":"The source of the search result","type":[[["\\"youtube","\\""]]],"meta":{"line":25,"file":"SearchResult.ts","path":"src/struct"}},{"name":"id","description":"YouTube video or playlist id","type":[[["string"]]],"meta":{"line":30,"file":"SearchResult.ts","path":"src/struct"}},{"name":"name","description":"Video or playlist title.","type":[[["string"]]],"meta":{"line":35,"file":"SearchResult.ts","path":"src/struct"}},{"name":"url","description":"Video or playlist URL.","type":[[["string"]]],"meta":{"line":40,"file":"SearchResult.ts","path":"src/struct"}},{"name":"uploader","description":"Video or playlist uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":45,"file":"SearchResult.ts","path":"src/struct"}}],"meta":{"line":115,"file":"SearchResult.ts","path":"src/struct"}},{"name":"Song","description":"Class representing a song.\\n\\n<info>If {@link Song} is added from a YouTube {@link SearchResult} or {@link Playlist},\\nsome info will be missing to save your resources. It will be filled when emitting {@link DisTube#playSong} event.\\n\\nMissing info: {@link Song#likes}, {@link Song#dislikes}, {@link Song#streamURL},\\n{@link Song#related}, {@link Song#chapters}, {@link Song#age_restricted}</info>","construct":{"name":"Song","description":"Create a Song","params":[{"name":"info","description":"Raw info","type":[[["ytdl","."],["videoInfo"]],[["SearchResult"]],[["OtherSongInfo"]]]},{"name":"options","description":"Optional options","optional":true,"type":[[["Object"]]]},{"name":"options.member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"options.source","description":"Song source","optional":true,"default":"\\"youtube\\"","type":[[["string"]]]},{"name":"options.metadata","description":"Song metadata","optional":true,"type":[[["T"]]]}]},"props":[{"name":"source","description":"The source of the song","type":[[["string"]]],"meta":{"line":66,"file":"Song.ts","path":"src/struct"}},{"name":"metadata","description":"Optional metadata that can be used to identify the song. This is attached by the {@link DisTube#play} method.","type":[[["T"]]],"meta":{"line":71,"file":"Song.ts","path":"src/struct"}},{"name":"formats","description":"Stream formats (Available if the song is from YouTube and playing)","access":"private","nullable":true,"type":[[["Array","<"],["ytdl","."],["videoFormat",">"]]],"meta":{"line":88,"file":"Song.ts","path":"src/struct"}},{"name":"id","description":"YouTube video id","nullable":true,"type":[[["string"]]],"meta":{"line":105,"file":"Song.ts","path":"src/struct"}},{"name":"name","description":"Song name.","nullable":true,"type":[[["string"]]],"meta":{"line":110,"file":"Song.ts","path":"src/struct"}},{"name":"isLive","description":"Indicates if the video is an active live.","type":[[["boolean"]]],"meta":{"line":115,"file":"Song.ts","path":"src/struct"}},{"name":"duration","description":"Song duration.","type":[[["number"]]],"meta":{"line":120,"file":"Song.ts","path":"src/struct"}},{"name":"formattedDuration","description":"Formatted duration string (`hh:mm:ss`, `mm:ss` or `Live`).","nullable":true,"type":[[["string"]]],"meta":{"line":125,"file":"Song.ts","path":"src/struct"}},{"name":"url","description":"Song URL.","type":[[["string"]]],"meta":{"line":130,"file":"Song.ts","path":"src/struct"}},{"name":"streamURL","description":"Stream / Download URL (Available if the song is playing)","nullable":true,"type":[[["string"]]],"meta":{"line":135,"file":"Song.ts","path":"src/struct"}},{"name":"thumbnail","description":"Song thumbnail.","nullable":true,"type":[[["string"]]],"meta":{"line":140,"file":"Song.ts","path":"src/struct"}},{"name":"related","description":"Related songs (without {@link Song#related} properties)","type":[[["Array","<"],["Song",">"]]],"meta":{"line":148,"file":"Song.ts","path":"src/struct"}},{"name":"views","description":"Song views count","type":[[["number"]]],"meta":{"line":155,"file":"Song.ts","path":"src/struct"}},{"name":"likes","description":"Song like count","type":[[["number"]]],"meta":{"line":160,"file":"Song.ts","path":"src/struct"}},{"name":"dislikes","description":"Song dislike count","type":[[["number"]]],"meta":{"line":165,"file":"Song.ts","path":"src/struct"}},{"name":"uploader","description":"Song uploader","type":[[["Object"]]],"props":[{"name":"name","description":"Uploader name","nullable":true,"type":[[["string"]]]},{"name":"url","description":"Uploader url","nullable":true,"type":[[["string"]]]}],"meta":{"line":170,"file":"Song.ts","path":"src/struct"}},{"name":"age_restricted","description":"Whether or not an age-restricted content","type":[[["boolean"]]],"meta":{"line":180,"file":"Song.ts","path":"src/struct"}},{"name":"chapters","description":"Chapters information (YouTube only)","type":[[["Array","<"],["Chapter",">"]]],"meta":{"line":190,"file":"Song.ts","path":"src/struct"}},{"name":"reposts","description":"Song repost count","type":[[["number"]]],"meta":{"line":195,"file":"Song.ts","path":"src/struct"}},{"name":"playlist","description":"The playlist added this song","nullable":true,"type":[[["Playlist"]]],"meta":{"line":237,"file":"Song.ts","path":"src/struct"}},{"name":"member","description":"User requested.","nullable":true,"type":[[["Discord","."],["GuildMember"]]],"meta":{"line":251,"file":"Song.ts","path":"src/struct"}},{"name":"user","description":"User requested.","nullable":true,"type":[[["Discord","."],["User"]]],"meta":{"line":263,"file":"Song.ts","path":"src/struct"}}],"methods":[{"name":"_patchOther","description":"Patch data from other source","access":"private","params":[{"name":"info","description":"Video info","type":[[["OtherSongInfo"]]]}],"meta":{"line":202,"file":"Song.ts","path":"src/struct"}}],"meta":{"line":7,"file":"Song.ts","path":"src/struct"}}],"interfaces":[],"typedefs":[{"name":"defaultFilters","description":"Default DisTube audio filters.","type":[[["Object"]]],"props":[{"name":"3d","description":"3d","type":[[["string"]]]},{"name":"bassboost","description":"bassboost","type":[[["string"]]]},{"name":"echo","description":"echo","type":[[["string"]]]},{"name":"karaoke","description":"karaoke","type":[[["string"]]]},{"name":"nightcore","description":"nightcore","type":[[["string"]]]},{"name":"vaporwave","description":"vaporwave","type":[[["string"]]]},{"name":"flanger","description":"flanger","type":[[["string"]]]},{"name":"gate","description":"gate","type":[[["string"]]]},{"name":"haas","description":"haas","type":[[["string"]]]},{"name":"reverse","description":"reverse","type":[[["string"]]]},{"name":"surround","description":"surround","type":[[["string"]]]},{"name":"mcompand","description":"mcompand","type":[[["string"]]]},{"name":"phaser","description":"phaser","type":[[["string"]]]},{"name":"tremolo","description":"tremolo","type":[[["string"]]]},{"name":"earwax","description":"earwax","type":[[["string"]]]}],"meta":{"line":4,"file":"constant.ts","path":"src"}},{"name":"SearchResult","description":"A video or playlist search result","type":[[["SearchResultVideo"]],[["SearchResultPlaylist"]]],"meta":{"line":109,"file":"SearchResult.ts","path":"src/struct"}},{"name":"Chapter","type":[[["Object"]]],"props":[{"name":"title","description":"Chapter title","type":[[["string"]]]},{"name":"start_time","description":"Chapter start time in seconds","type":[[["number"]]]}],"meta":{"line":185,"file":"Song.ts","path":"src/struct"}},{"name":"Filter","description":"An FFmpeg audio filter object\\n```\\n{\\n  name:  \\"bassboost\\",\\n  value: \\"bass=g=10\\"\\n}\\n```","type":[[["Object"]]],"props":[{"name":"name","description":"Name of the filter","type":[[["string"]]]},{"name":"value","description":"FFmpeg audio filter(s)","type":[[["string"]]]}],"meta":{"line":45,"file":"type.ts","path":"src"}},{"name":"FilterResolvable","description":"Data that resolves to give an FFmpeg audio filter. This can be:\\n- A name of a default filters or custom filters (`string`)\\n- A {@link Filter} object","see":["{@link defaultFilters}","{@link DisTubeOptions|DisTubeOptions.customFilters}"],"type":[[["string"]],[["Filter"]]],"meta":{"line":62,"file":"type.ts","path":"src"}},{"name":"Filters","description":"FFmpeg Filters\\n```\\n{\\n  \\"Filter Name\\": \\"Filter Value\\",\\n  \\"bassboost\\":   \\"bass=g=10\\"\\n}\\n```","see":["{@link defaultFilters}"],"type":[[["Object","<"],["string",", "],["string",">"]]],"meta":{"line":72,"file":"type.ts","path":"src"}},{"name":"DisTubeOptions","description":"DisTube options.","type":[[["Object"]]],"props":[{"name":"plugins","description":"DisTube plugins.","optional":true,"type":[[["Array","<"],["CustomPlugin","|"],["ExtractorPlugin",">"]]]},{"name":"emitNewSongOnly","description":"Whether or not emitting {@link DisTube#event:playSong} event\\nwhen looping a song or next song is the same as the previous one","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"leaveOnEmpty","description":"Whether or not leaving voice channel\\nif the voice channel is empty after {@link DisTubeOptions}.emptyCooldown seconds.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"leaveOnFinish","description":"Whether or not leaving voice channel when the queue ends.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"leaveOnStop","description":"Whether or not leaving voice channel after using {@link DisTube#stop} function.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"savePreviousSongs","description":"Whether or not saving the previous songs of the queue\\nand enable {@link DisTube#previous} method","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"searchSongs","description":"Limit of search results emits in {@link DisTube#event:searchResult} event\\nwhen {@link DisTube#play} method executed. If `searchSongs <= 1`, play the first result","optional":true,"default":0,"type":[[["number"]]]},{"name":"youtubeCookie","description":"YouTube cookies. Read how to get it in\\n{@link https://github.com/fent/node-ytdl-core/blob/997efdd5dd9063363f6ef668bb364e83970756e7/example/cookies.js#L6-L12|YTDL\'s Example}","optional":true,"type":[[["string"]]]},{"name":"youtubeIdentityToken","description":"If not given; ytdl-core will try to find it.\\nYou can find this by going to a video\'s watch page; viewing the source; and searching for \\"ID_TOKEN\\".","optional":true,"type":[[["string"]]]},{"name":"customFilters","description":"Override {@link defaultFilters} or add more ffmpeg filters.\\nExample=`{ \\"Filter name\\"=\\"Filter value\\"; \\"8d\\"=\\"apulsator=hz=0.075\\" }`","optional":true,"type":[[["Filters"]]]},{"name":"ytdlOptions","description":"`ytdl-core` get info options","optional":true,"type":[[["ytdl","."],["getInfoOptions"]]]},{"name":"searchCooldown","description":"Built-in search cooldown in seconds (When searchSongs is bigger than 0)","optional":true,"default":60,"type":[[["number"]]]},{"name":"emptyCooldown","description":"Built-in leave on empty cooldown in seconds (When leaveOnEmpty is true)","optional":true,"default":60,"type":[[["number"]]]},{"name":"nsfw","description":"Whether or not playing age-restricted content\\nand disabling safe search in non-NSFW channel.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"emitAddListWhenCreatingQueue","description":"Whether or not emitting `addList` event when creating a new Queue","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"emitAddSongWhenCreatingQueue","description":"Whether or not emitting `addSong` event when creating a new Queue","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"joinNewVoiceChannel","description":"Whether or not joining the new voice channel\\nwhen using {@link DisTube#play} method","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"streamType","description":"Decide the {@link DisTubeStream#type} will be used\\n(Not the same as {@link DisTubeStream#type})","optional":true,"default":"StreamType.OPUS","type":[[["StreamType"]]]},{"name":"directLink","description":"Whether or not play direct link of the song","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":85,"file":"type.ts","path":"src"}},{"name":"GuildIdResolvable","description":"Data that can be resolved to give a guild id string. This can be:\\n- A guild id string | a guild {@link https://discord.js.org/#/docs/main/stable/class/Snowflake|Snowflake}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/Guild|Guild}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/Message|Message}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/BaseGuildVoiceChannel|BaseGuildVoiceChannel}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/BaseGuildTextChannel|BaseGuildTextChannel}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/VoiceState|VoiceState}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/GuildMember|GuildMember}\\n- A {@link https://discord.js.org/#/docs/main/stable/class/Interaction|Interaction}\\n- A {@link DisTubeVoice}\\n- A {@link Queue}","type":[[["Discord","."],["Snowflake"]],[["Discord","."],["Guild"]],[["Discord","."],["Message"]],[["Discord","."],["BaseGuildVoiceChannel"]],[["Discord","."],["BaseGuildTextChannel"]],[["Discord","."],["VoiceState"]],[["Discord","."],["GuildMember"]],[["Discord","."],["Interaction"]],[["DisTubeVoice"]],[["Queue"]],[["string"]]],"meta":{"line":140,"file":"type.ts","path":"src"}},{"name":"PlayHandlerOptions","type":[[["Object"]]],"props":[{"name":"options.textChannel","description":"The default text channel of the queue","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]},{"name":"options.skip","description":"Skip the playing song (if exists) and play the added playlist instantly","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"options.position","description":"Position of the song/playlist to add to the queue,\\n<= 0 to add to the end of the queue.","optional":true,"default":0,"type":[[["number"]]]}],"meta":{"line":227,"file":"type.ts","path":"src"}},{"name":"PlayOptions","type":[[["Object"]]],"props":[{"name":"member","description":"Requested user (default is your bot)","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"textChannel","description":"Default {@link Queue#textChannel}","optional":true,"type":[[["Discord","."],["BaseGuildTextChannel"]]]},{"name":"skip","description":"Skip the playing song (if exists) and play the added song/playlist if `position` is 1.\\nIf `position` is defined and not equal to 1, it will skip to the next song instead of the added song","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"position","description":"Position of the song/playlist to add to the queue,\\n<= 0 to add to the end of the queue.","optional":true,"default":0,"type":[[["number"]]]},{"name":"message","description":"Called message (For built-in search events. If this is a {@link https://developer.mozilla.org/en-US/docs/Glossary/Falsy|falsy value}, it will play the first result instead)","optional":true,"type":[[["Discord","."],["Message"]]]},{"name":"metadata","description":"Optional metadata that can be attached to the song/playlist will be played,\\nThis is useful for identification purposes when the song/playlist is passed around in events.\\nSee {@link Song#metadata} or {@link Playlist#metadata}","optional":true,"type":[["*"]]}],"meta":{"line":240,"file":"type.ts","path":"src"}},{"name":"ResolveOptions","type":[[["Object"]]],"props":[{"name":"member","description":"Requested user","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"metadata","description":"Metadata","optional":true,"type":[["*"]]}],"meta":{"line":258,"file":"type.ts","path":"src"}},{"name":"ResolvePlaylistOptions","type":[[["ResolveOptions"]]],"props":[{"name":"source","description":"Source of the playlist","optional":true,"type":[[["string"]]]}],"meta":{"line":268,"file":"type.ts","path":"src"}},{"name":"CustomPlaylistOptions","type":[[["Object"]]],"props":[{"name":"member","description":"A guild member creating the playlist","optional":true,"type":[[["Discord","."],["GuildMember"]]]},{"name":"properties","description":"Additional properties such as `name`","optional":true,"type":[[["Object"]]]},{"name":"parallel","description":"Whether or not fetch the songs in parallel","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"metadata","description":"Metadata","optional":true,"type":[["*"]]}],"meta":{"line":276,"file":"type.ts","path":"src"}},{"name":"RepeatMode","description":"The repeat mode of a {@link Queue}\\n* `DISABLED` = 0\\n* `SONG` = 1\\n* `QUEUE` = 2","type":[[["number"]]],"meta":{"line":290,"file":"type.ts","path":"src"}},{"name":"PluginType","description":"All available plugin types:\\n* `CUSTOM` = `\\"custom\\"`: {@link CustomPlugin}\\n* `EXTRACTOR` = `\\"extractor\\"`: {@link ExtractorPlugin}","type":[[["\\"custom","\\""]],[["\\"extractor","\\""]]],"meta":{"line":303,"file":"type.ts","path":"src"}},{"name":"SearchResultType","description":"Search result types:\\n* `VIDEO` = `\\"video\\"`\\n* `PLAYLIST` = `\\"playlist\\"`","type":[[["\\"video","\\""]],[["\\"playlist","\\""]]],"meta":{"line":314,"file":"type.ts","path":"src"}},{"name":"StreamType","description":"Stream types:\\n* `OPUS` = `0` (Better quality, use more resources - **Recommended**)\\n* `RAW` = `1` (Better performance, use less resources)","type":[[["number"]]],"meta":{"line":325,"file":"type.ts","path":"src"}},{"name":"Events","type":[[["Object"]]],"props":[{"name":"ERROR","description":"error","type":[[["string"]]]},{"name":"ADD_LIST","description":"addList","type":[[["string"]]]},{"name":"ADD_SONG","description":"addSong","type":[[["string"]]]},{"name":"PLAY_SONG","description":"playSong","type":[[["string"]]]},{"name":"FINISH_SONG","description":"finishSong","type":[[["string"]]]},{"name":"EMPTY","description":"empty","type":[[["string"]]]},{"name":"FINISH","description":"finish","type":[[["string"]]]},{"name":"INIT_QUEUE","description":"initQueue","type":[[["string"]]]},{"name":"NO_RELATED","description":"noRelated","type":[[["string"]]]},{"name":"DISCONNECT","description":"disconnect","type":[[["string"]]]},{"name":"DELETE_QUEUE","description":"deleteQueue","type":[[["string"]]]},{"name":"SEARCH_CANCEL","description":"searchCancel","type":[[["string"]]]},{"name":"SEARCH_NO_RESULT","description":"searchNoResult","type":[[["string"]]]},{"name":"SEARCH_DONE","description":"searchDone","type":[[["string"]]]},{"name":"SEARCH_INVALID_ANSWER","description":"searchInvalidAnswer","type":[[["string"]]]},{"name":"SEARCH_RESULT","description":"searchResult","type":[[["string"]]]}],"meta":{"line":337,"file":"type.ts","path":"src"}}],"externals":[]}')}},t={};function s(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return e[i].call(a.exports,a,a.exports,s),a.exports}s.m=e,function(){var e=[];s.O=function(t,i,n,a){if(!i){var r=1/0;for(p=0;p<e.length;p++){i=e[p][0],n=e[p][1],a=e[p][2];for(var o=!0,l=0;l<i.length;l++)(!1&a||r>=a)&&Object.keys(s.O).every((function(e){return s.O[e](i[l])}))?i.splice(l--,1):(o=!1,a<r&&(r=a));if(o){e.splice(p--,1);var c=n();void 0!==c&&(t=c)}}return t}a=a||0;for(var p=e.length;p>0&&e[p-1][2]>a;p--)e[p]=e[p-1];e[p]=[i,n,a]}}(),function(){s.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return s.d(t,{a:t}),t}}(),function(){s.d=function(e,t){for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){s.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};s.O.j=function(t){return 0===e[t]};var t=function(t,i){var n,a,r=i[0],o=i[1],l=i[2],c=0;if(r.some((function(t){return 0!==e[t]}))){for(n in o)s.o(o,n)&&(s.m[n]=o[n]);if(l)var p=l(s)}for(t&&t(i);c<r.length;c++)a=r[c],s.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return s.O(p)},i=self["webpackChunkdistube_website"]=self["webpackChunkdistube_website"]||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))}();var i=s.O(void 0,[998],(function(){return s(6943)}));i=s.O(i)})();
//# sourceMappingURL=app.3dcaa166.js.map